Terminals unused in grammar

    VERDAD
    FALSO


Grammar

    0 $accept: prog $end

    1 prog: listainst

    2 listainst: instr listainst
    3          | %empty

    4 instr: declaracion
    5      | asignacion
    6      | comp
    7      | iterativa_while
    8      | condicional

    9 iterativa_while: MIENTRAS '(' comp ')' bloque

   10 condicional: IF '(' comp ')' bloque

   11 bloque: '{' listainst '}'

   12 declaracion: identificador ID

   13 @1: %empty

   14 declaracion: identificador ID @1 '=' expresion

   15 @2: %empty

   16 declaracion: CONST identificador ID @2 '=' expresion

   17 @3: %empty

   18 asignacion: ID @3 '=' expresion

   19 identificador: INT
   20              | FLOAT
   21              | DOUBLE
   22              | CHAR
   23              | LONG
   24              | VOID
   25              | BOOL
   26              | SHORT

   27 expresion: expr
   28          | comp
   29          | sumaunaria

   30 expr: expr '+' term
   31     | expr '-' term
   32     | term

   33 term: term opmult factor
   34     | factor

   35 opmult: '*'

   36 factor: NUM
   37       | '(' expr ')'
   38       | ID

   39 comp: expr '>' '=' expr
   40     | expr '>' expr
   41     | expr '<' expr
   42     | expr IGUALDAD expr

   43 sumaunaria: ID SUMAUN


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 10 37
    ')' (41) 9 10 37
    '*' (42) 35
    '+' (43) 30
    '-' (45) 31
    '<' (60) 41
    '=' (61) 14 16 18 39
    '>' (62) 39 40
    '{' (123) 11
    '}' (125) 11
    error (256)
    MIENTRAS (258) 9
    IF (259) 10
    ID (260) 12 14 16 18 38 43
    NUM (261) 36
    SUMAUN (262) 43
    IGUALDAD (263) 42
    INT (264) 19
    LONG (265) 23
    SHORT (266) 26
    DOUBLE (267) 21
    FLOAT (268) 20
    CHAR (269) 22
    BOOL (270) 25
    VERDAD (271)
    FALSO (272)
    VOID (273) 24
    CONST (274) 16


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    prog (31)
        on left: 1
        on right: 0
    listainst (32)
        on left: 2 3
        on right: 1 2 11
    instr (33)
        on left: 4 5 6 7 8
        on right: 2
    iterativa_while (34)
        on left: 9
        on right: 7
    condicional (35)
        on left: 10
        on right: 8
    bloque (36)
        on left: 11
        on right: 9 10
    declaracion (37)
        on left: 12 14 16
        on right: 4
    @1 (38)
        on left: 13
        on right: 14
    @2 (39)
        on left: 15
        on right: 16
    asignacion (40)
        on left: 18
        on right: 5
    @3 (41)
        on left: 17
        on right: 18
    identificador (42)
        on left: 19 20 21 22 23 24 25 26
        on right: 12 14 16
    expresion (43)
        on left: 27 28 29
        on right: 14 16 18
    expr (44)
        on left: 30 31 32
        on right: 27 30 31 37 39 40 41 42
    term (45)
        on left: 33 34
        on right: 30 31 32 33
    opmult (46)
        on left: 35
        on right: 33
    factor (47)
        on left: 36 37 38
        on right: 33 34
    comp (48)
        on left: 39 40 41 42
        on right: 6 9 10 28
    sumaunaria (49)
        on left: 43
        on right: 29


State 0

    0 $accept: . prog $end

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    DOUBLE    shift, and go to state 8
    FLOAT     shift, and go to state 9
    CHAR      shift, and go to state 10
    BOOL      shift, and go to state 11
    VOID      shift, and go to state 12
    CONST     shift, and go to state 13
    '('       shift, and go to state 14

    $default  reduce using rule 3 (listainst)

    prog             go to state 15
    listainst        go to state 16
    instr            go to state 17
    iterativa_while  go to state 18
    condicional      go to state 19
    declaracion      go to state 20
    asignacion       go to state 21
    identificador    go to state 22
    expr             go to state 23
    term             go to state 24
    factor           go to state 25
    comp             go to state 26


State 1

    9 iterativa_while: MIENTRAS . '(' comp ')' bloque

    '('  shift, and go to state 27


State 2

   10 condicional: IF . '(' comp ')' bloque

    '('  shift, and go to state 28


State 3

   18 asignacion: ID . @3 '=' expresion
   38 factor: ID .

    '='       reduce using rule 17 (@3)
    $default  reduce using rule 38 (factor)

    @3  go to state 29


State 4

   36 factor: NUM .

    $default  reduce using rule 36 (factor)


State 5

   19 identificador: INT .

    $default  reduce using rule 19 (identificador)


State 6

   23 identificador: LONG .

    $default  reduce using rule 23 (identificador)


State 7

   26 identificador: SHORT .

    $default  reduce using rule 26 (identificador)


State 8

   21 identificador: DOUBLE .

    $default  reduce using rule 21 (identificador)


State 9

   20 identificador: FLOAT .

    $default  reduce using rule 20 (identificador)


State 10

   22 identificador: CHAR .

    $default  reduce using rule 22 (identificador)


State 11

   25 identificador: BOOL .

    $default  reduce using rule 25 (identificador)


State 12

   24 identificador: VOID .

    $default  reduce using rule 24 (identificador)


State 13

   16 declaracion: CONST . identificador ID @2 '=' expresion

    INT     shift, and go to state 5
    LONG    shift, and go to state 6
    SHORT   shift, and go to state 7
    DOUBLE  shift, and go to state 8
    FLOAT   shift, and go to state 9
    CHAR    shift, and go to state 10
    BOOL    shift, and go to state 11
    VOID    shift, and go to state 12

    identificador  go to state 30


State 14

   37 factor: '(' . expr ')'

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 32
    term    go to state 24
    factor  go to state 25


State 15

    0 $accept: prog . $end

    $end  shift, and go to state 33


State 16

    1 prog: listainst .

    $default  reduce using rule 1 (prog)


State 17

    2 listainst: instr . listainst

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    DOUBLE    shift, and go to state 8
    FLOAT     shift, and go to state 9
    CHAR      shift, and go to state 10
    BOOL      shift, and go to state 11
    VOID      shift, and go to state 12
    CONST     shift, and go to state 13
    '('       shift, and go to state 14

    $default  reduce using rule 3 (listainst)

    listainst        go to state 34
    instr            go to state 17
    iterativa_while  go to state 18
    condicional      go to state 19
    declaracion      go to state 20
    asignacion       go to state 21
    identificador    go to state 22
    expr             go to state 23
    term             go to state 24
    factor           go to state 25
    comp             go to state 26


State 18

    7 instr: iterativa_while .

    $default  reduce using rule 7 (instr)


State 19

    8 instr: condicional .

    $default  reduce using rule 8 (instr)


State 20

    4 instr: declaracion .

    $default  reduce using rule 4 (instr)


State 21

    5 instr: asignacion .

    $default  reduce using rule 5 (instr)


State 22

   12 declaracion: identificador . ID
   14            | identificador . ID @1 '=' expresion

    ID  shift, and go to state 35


State 23

   30 expr: expr . '+' term
   31     | expr . '-' term
   39 comp: expr . '>' '=' expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 36
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38
    '>'       shift, and go to state 39
    '<'       shift, and go to state 40


State 24

   32 expr: term .
   33 term: term . opmult factor

    '*'  shift, and go to state 41

    $default  reduce using rule 32 (expr)

    opmult  go to state 42


State 25

   34 term: factor .

    $default  reduce using rule 34 (term)


State 26

    6 instr: comp .

    $default  reduce using rule 6 (instr)


State 27

    9 iterativa_while: MIENTRAS '(' . comp ')' bloque

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 23
    term    go to state 24
    factor  go to state 25
    comp    go to state 43


State 28

   10 condicional: IF '(' . comp ')' bloque

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 23
    term    go to state 24
    factor  go to state 25
    comp    go to state 44


State 29

   18 asignacion: ID @3 . '=' expresion

    '='  shift, and go to state 45


State 30

   16 declaracion: CONST identificador . ID @2 '=' expresion

    ID  shift, and go to state 46


State 31

   38 factor: ID .

    $default  reduce using rule 38 (factor)


State 32

   30 expr: expr . '+' term
   31     | expr . '-' term
   37 factor: '(' expr . ')'

    ')'  shift, and go to state 47
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38


State 33

    0 $accept: prog $end .

    $default  accept


State 34

    2 listainst: instr listainst .

    $default  reduce using rule 2 (listainst)


State 35

   12 declaracion: identificador ID .
   14            | identificador ID . @1 '=' expresion

    '='       reduce using rule 13 (@1)
    $default  reduce using rule 12 (declaracion)

    @1  go to state 48


State 36

   42 comp: expr IGUALDAD . expr

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 49
    term    go to state 24
    factor  go to state 25


State 37

   30 expr: expr '+' . term

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    term    go to state 50
    factor  go to state 25


State 38

   31 expr: expr '-' . term

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    term    go to state 51
    factor  go to state 25


State 39

   39 comp: expr '>' . '=' expr
   40     | expr '>' . expr

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14
    '='  shift, and go to state 52

    expr    go to state 53
    term    go to state 24
    factor  go to state 25


State 40

   41 comp: expr '<' . expr

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 54
    term    go to state 24
    factor  go to state 25


State 41

   35 opmult: '*' .

    $default  reduce using rule 35 (opmult)


State 42

   33 term: term opmult . factor

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    factor  go to state 55


State 43

    9 iterativa_while: MIENTRAS '(' comp . ')' bloque

    ')'  shift, and go to state 56


State 44

   10 condicional: IF '(' comp . ')' bloque

    ')'  shift, and go to state 57


State 45

   18 asignacion: ID @3 '=' . expresion

    ID   shift, and go to state 58
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expresion   go to state 59
    expr        go to state 60
    term        go to state 24
    factor      go to state 25
    comp        go to state 61
    sumaunaria  go to state 62


State 46

   16 declaracion: CONST identificador ID . @2 '=' expresion

    $default  reduce using rule 15 (@2)

    @2  go to state 63


State 47

   37 factor: '(' expr ')' .

    $default  reduce using rule 37 (factor)


State 48

   14 declaracion: identificador ID @1 . '=' expresion

    '='  shift, and go to state 64


State 49

   30 expr: expr . '+' term
   31     | expr . '-' term
   42 comp: expr IGUALDAD expr .

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 42 (comp)


State 50

   30 expr: expr '+' term .
   33 term: term . opmult factor

    '*'  shift, and go to state 41

    $default  reduce using rule 30 (expr)

    opmult  go to state 42


State 51

   31 expr: expr '-' term .
   33 term: term . opmult factor

    '*'  shift, and go to state 41

    $default  reduce using rule 31 (expr)

    opmult  go to state 42


State 52

   39 comp: expr '>' '=' . expr

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 65
    term    go to state 24
    factor  go to state 25


State 53

   30 expr: expr . '+' term
   31     | expr . '-' term
   40 comp: expr '>' expr .

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 40 (comp)


State 54

   30 expr: expr . '+' term
   31     | expr . '-' term
   41 comp: expr '<' expr .

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 41 (comp)


State 55

   33 term: term opmult factor .

    $default  reduce using rule 33 (term)


State 56

    9 iterativa_while: MIENTRAS '(' comp ')' . bloque

    '{'  shift, and go to state 66

    bloque  go to state 67


State 57

   10 condicional: IF '(' comp ')' . bloque

    '{'  shift, and go to state 66

    bloque  go to state 68


State 58

   38 factor: ID .
   43 sumaunaria: ID . SUMAUN

    SUMAUN  shift, and go to state 69

    $default  reduce using rule 38 (factor)


State 59

   18 asignacion: ID @3 '=' expresion .

    $default  reduce using rule 18 (asignacion)


State 60

   27 expresion: expr .
   30 expr: expr . '+' term
   31     | expr . '-' term
   39 comp: expr . '>' '=' expr
   40     | expr . '>' expr
   41     | expr . '<' expr
   42     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 36
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38
    '>'       shift, and go to state 39
    '<'       shift, and go to state 40

    $default  reduce using rule 27 (expresion)


State 61

   28 expresion: comp .

    $default  reduce using rule 28 (expresion)


State 62

   29 expresion: sumaunaria .

    $default  reduce using rule 29 (expresion)


State 63

   16 declaracion: CONST identificador ID @2 . '=' expresion

    '='  shift, and go to state 70


State 64

   14 declaracion: identificador ID @1 '=' . expresion

    ID   shift, and go to state 58
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expresion   go to state 71
    expr        go to state 60
    term        go to state 24
    factor      go to state 25
    comp        go to state 61
    sumaunaria  go to state 62


State 65

   30 expr: expr . '+' term
   31     | expr . '-' term
   39 comp: expr '>' '=' expr .

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 39 (comp)


State 66

   11 bloque: '{' . listainst '}'

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    DOUBLE    shift, and go to state 8
    FLOAT     shift, and go to state 9
    CHAR      shift, and go to state 10
    BOOL      shift, and go to state 11
    VOID      shift, and go to state 12
    CONST     shift, and go to state 13
    '('       shift, and go to state 14

    $default  reduce using rule 3 (listainst)

    listainst        go to state 72
    instr            go to state 17
    iterativa_while  go to state 18
    condicional      go to state 19
    declaracion      go to state 20
    asignacion       go to state 21
    identificador    go to state 22
    expr             go to state 23
    term             go to state 24
    factor           go to state 25
    comp             go to state 26


State 67

    9 iterativa_while: MIENTRAS '(' comp ')' bloque .

    $default  reduce using rule 9 (iterativa_while)


State 68

   10 condicional: IF '(' comp ')' bloque .

    $default  reduce using rule 10 (condicional)


State 69

   43 sumaunaria: ID SUMAUN .

    $default  reduce using rule 43 (sumaunaria)


State 70

   16 declaracion: CONST identificador ID @2 '=' . expresion

    ID   shift, and go to state 58
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expresion   go to state 73
    expr        go to state 60
    term        go to state 24
    factor      go to state 25
    comp        go to state 61
    sumaunaria  go to state 62


State 71

   14 declaracion: identificador ID @1 '=' expresion .

    $default  reduce using rule 14 (declaracion)


State 72

   11 bloque: '{' listainst . '}'

    '}'  shift, and go to state 74


State 73

   16 declaracion: CONST identificador ID @2 '=' expresion .

    $default  reduce using rule 16 (declaracion)


State 74

   11 bloque: '{' listainst '}' .

    $default  reduce using rule 11 (bloque)

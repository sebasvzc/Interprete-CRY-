Terminals unused in grammar

    VERDAD
    FALSO


Grammar

    0 $accept: prog $end

    1 prog: listainst

    2 listainst: instr listainst
    3          | %empty

    4 instr: declaracion
    5      | asignacion
    6      | comp
    7      | iterativa_while
    8      | condicional

    9 iterativa_while: MIENTRAS '(' comp ')' bloque

   10 condicional: IF '(' comp ')' bloque

   11 bloque: '{' listainst '}'

   12 declaracion: identificador ID

   13 @1: %empty

   14 $@2: %empty

   15 declaracion: CONST identificador ID @1 '=' $@2 expresion

   16 @3: %empty

   17 asignacion: ID @3 '=' expresion

   18 identificador: INT
   19              | FLOAT
   20              | DOUBLE
   21              | CHAR
   22              | LONG
   23              | VOID
   24              | BOOL
   25              | SHORT

   26 expresion: expr
   27          | comp
   28          | sumaunaria

   29 expr: expr '+' term
   30     | expr '-' term
   31     | term

   32 term: term op factor
   33     | factor

   34 op: '*'
   35   | '/'
   36   | BITSIZ
   37   | BISTDE
   38   | '%'

   39 factor: NUM
   40       | '(' expr ')'
   41       | ID

   42 comp: expr '>' '=' expr
   43     | expr '>' expr
   44     | expr '<' expr
   45     | expr '<' '=' expr
   46     | expr IGUALDAD expr

   47 sumaunaria: ID SUMAUN


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 38
    '(' (40) 9 10 40
    ')' (41) 9 10 40
    '*' (42) 34
    '+' (43) 29
    '-' (45) 30
    '/' (47) 35
    '<' (60) 44 45
    '=' (61) 15 17 42 45
    '>' (62) 42 43
    '{' (123) 11
    '}' (125) 11
    error (256)
    MIENTRAS (258) 9
    IF (259) 10
    ID (260) 12 15 17 41 47
    NUM (261) 39
    SUMAUN (262) 47
    IGUALDAD (263) 46
    INT (264) 18
    LONG (265) 22
    SHORT (266) 25
    DOUBLE (267) 20
    FLOAT (268) 19
    CHAR (269) 21
    BOOL (270) 24
    VERDAD (271)
    FALSO (272)
    VOID (273) 23
    CONST (274) 15
    BITSIZ (275) 36
    BISTDE (276) 37


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    prog (35)
        on left: 1
        on right: 0
    listainst (36)
        on left: 2 3
        on right: 1 2 11
    instr (37)
        on left: 4 5 6 7 8
        on right: 2
    iterativa_while (38)
        on left: 9
        on right: 7
    condicional (39)
        on left: 10
        on right: 8
    bloque (40)
        on left: 11
        on right: 9 10
    declaracion (41)
        on left: 12 15
        on right: 4
    @1 (42)
        on left: 13
        on right: 15
    $@2 (43)
        on left: 14
        on right: 15
    asignacion (44)
        on left: 17
        on right: 5
    @3 (45)
        on left: 16
        on right: 17
    identificador (46)
        on left: 18 19 20 21 22 23 24 25
        on right: 12 15
    expresion (47)
        on left: 26 27 28
        on right: 15 17
    expr (48)
        on left: 29 30 31
        on right: 26 29 30 40 42 43 44 45 46
    term (49)
        on left: 32 33
        on right: 29 30 31 32
    op (50)
        on left: 34 35 36 37 38
        on right: 32
    factor (51)
        on left: 39 40 41
        on right: 32 33
    comp (52)
        on left: 42 43 44 45 46
        on right: 6 9 10 27
    sumaunaria (53)
        on left: 47
        on right: 28


State 0

    0 $accept: . prog $end

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    DOUBLE    shift, and go to state 8
    FLOAT     shift, and go to state 9
    CHAR      shift, and go to state 10
    BOOL      shift, and go to state 11
    VOID      shift, and go to state 12
    CONST     shift, and go to state 13
    '('       shift, and go to state 14

    $default  reduce using rule 3 (listainst)

    prog             go to state 15
    listainst        go to state 16
    instr            go to state 17
    iterativa_while  go to state 18
    condicional      go to state 19
    declaracion      go to state 20
    asignacion       go to state 21
    identificador    go to state 22
    expr             go to state 23
    term             go to state 24
    factor           go to state 25
    comp             go to state 26


State 1

    9 iterativa_while: MIENTRAS . '(' comp ')' bloque

    '('  shift, and go to state 27


State 2

   10 condicional: IF . '(' comp ')' bloque

    '('  shift, and go to state 28


State 3

   17 asignacion: ID . @3 '=' expresion
   41 factor: ID .

    '='       reduce using rule 16 (@3)
    $default  reduce using rule 41 (factor)

    @3  go to state 29


State 4

   39 factor: NUM .

    $default  reduce using rule 39 (factor)


State 5

   18 identificador: INT .

    $default  reduce using rule 18 (identificador)


State 6

   22 identificador: LONG .

    $default  reduce using rule 22 (identificador)


State 7

   25 identificador: SHORT .

    $default  reduce using rule 25 (identificador)


State 8

   20 identificador: DOUBLE .

    $default  reduce using rule 20 (identificador)


State 9

   19 identificador: FLOAT .

    $default  reduce using rule 19 (identificador)


State 10

   21 identificador: CHAR .

    $default  reduce using rule 21 (identificador)


State 11

   24 identificador: BOOL .

    $default  reduce using rule 24 (identificador)


State 12

   23 identificador: VOID .

    $default  reduce using rule 23 (identificador)


State 13

   15 declaracion: CONST . identificador ID @1 '=' $@2 expresion

    INT     shift, and go to state 5
    LONG    shift, and go to state 6
    SHORT   shift, and go to state 7
    DOUBLE  shift, and go to state 8
    FLOAT   shift, and go to state 9
    CHAR    shift, and go to state 10
    BOOL    shift, and go to state 11
    VOID    shift, and go to state 12

    identificador  go to state 30


State 14

   40 factor: '(' . expr ')'

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 32
    term    go to state 24
    factor  go to state 25


State 15

    0 $accept: prog . $end

    $end  shift, and go to state 33


State 16

    1 prog: listainst .

    $default  reduce using rule 1 (prog)


State 17

    2 listainst: instr . listainst

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    DOUBLE    shift, and go to state 8
    FLOAT     shift, and go to state 9
    CHAR      shift, and go to state 10
    BOOL      shift, and go to state 11
    VOID      shift, and go to state 12
    CONST     shift, and go to state 13
    '('       shift, and go to state 14

    $default  reduce using rule 3 (listainst)

    listainst        go to state 34
    instr            go to state 17
    iterativa_while  go to state 18
    condicional      go to state 19
    declaracion      go to state 20
    asignacion       go to state 21
    identificador    go to state 22
    expr             go to state 23
    term             go to state 24
    factor           go to state 25
    comp             go to state 26


State 18

    7 instr: iterativa_while .

    $default  reduce using rule 7 (instr)


State 19

    8 instr: condicional .

    $default  reduce using rule 8 (instr)


State 20

    4 instr: declaracion .

    $default  reduce using rule 4 (instr)


State 21

    5 instr: asignacion .

    $default  reduce using rule 5 (instr)


State 22

   12 declaracion: identificador . ID

    ID  shift, and go to state 35


State 23

   29 expr: expr . '+' term
   30     | expr . '-' term
   42 comp: expr . '>' '=' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '<' '=' expr
   46     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 36
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38
    '>'       shift, and go to state 39
    '<'       shift, and go to state 40


State 24

   31 expr: term .
   32 term: term . op factor

    BITSIZ  shift, and go to state 41
    BISTDE  shift, and go to state 42
    '*'     shift, and go to state 43
    '/'     shift, and go to state 44
    '%'     shift, and go to state 45

    $default  reduce using rule 31 (expr)

    op  go to state 46


State 25

   33 term: factor .

    $default  reduce using rule 33 (term)


State 26

    6 instr: comp .

    $default  reduce using rule 6 (instr)


State 27

    9 iterativa_while: MIENTRAS '(' . comp ')' bloque

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 23
    term    go to state 24
    factor  go to state 25
    comp    go to state 47


State 28

   10 condicional: IF '(' . comp ')' bloque

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 23
    term    go to state 24
    factor  go to state 25
    comp    go to state 48


State 29

   17 asignacion: ID @3 . '=' expresion

    '='  shift, and go to state 49


State 30

   15 declaracion: CONST identificador . ID @1 '=' $@2 expresion

    ID  shift, and go to state 50


State 31

   41 factor: ID .

    $default  reduce using rule 41 (factor)


State 32

   29 expr: expr . '+' term
   30     | expr . '-' term
   40 factor: '(' expr . ')'

    ')'  shift, and go to state 51
    '+'  shift, and go to state 37
    '-'  shift, and go to state 38


State 33

    0 $accept: prog $end .

    $default  accept


State 34

    2 listainst: instr listainst .

    $default  reduce using rule 2 (listainst)


State 35

   12 declaracion: identificador ID .

    $default  reduce using rule 12 (declaracion)


State 36

   46 comp: expr IGUALDAD . expr

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 52
    term    go to state 24
    factor  go to state 25


State 37

   29 expr: expr '+' . term

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    term    go to state 53
    factor  go to state 25


State 38

   30 expr: expr '-' . term

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    term    go to state 54
    factor  go to state 25


State 39

   42 comp: expr '>' . '=' expr
   43     | expr '>' . expr

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14
    '='  shift, and go to state 55

    expr    go to state 56
    term    go to state 24
    factor  go to state 25


State 40

   44 comp: expr '<' . expr
   45     | expr '<' . '=' expr

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14
    '='  shift, and go to state 57

    expr    go to state 58
    term    go to state 24
    factor  go to state 25


State 41

   36 op: BITSIZ .

    $default  reduce using rule 36 (op)


State 42

   37 op: BISTDE .

    $default  reduce using rule 37 (op)


State 43

   34 op: '*' .

    $default  reduce using rule 34 (op)


State 44

   35 op: '/' .

    $default  reduce using rule 35 (op)


State 45

   38 op: '%' .

    $default  reduce using rule 38 (op)


State 46

   32 term: term op . factor

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    factor  go to state 59


State 47

    9 iterativa_while: MIENTRAS '(' comp . ')' bloque

    ')'  shift, and go to state 60


State 48

   10 condicional: IF '(' comp . ')' bloque

    ')'  shift, and go to state 61


State 49

   17 asignacion: ID @3 '=' . expresion

    ID   shift, and go to state 62
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expresion   go to state 63
    expr        go to state 64
    term        go to state 24
    factor      go to state 25
    comp        go to state 65
    sumaunaria  go to state 66


State 50

   15 declaracion: CONST identificador ID . @1 '=' $@2 expresion

    $default  reduce using rule 13 (@1)

    @1  go to state 67


State 51

   40 factor: '(' expr ')' .

    $default  reduce using rule 40 (factor)


State 52

   29 expr: expr . '+' term
   30     | expr . '-' term
   46 comp: expr IGUALDAD expr .

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 46 (comp)


State 53

   29 expr: expr '+' term .
   32 term: term . op factor

    BITSIZ  shift, and go to state 41
    BISTDE  shift, and go to state 42
    '*'     shift, and go to state 43
    '/'     shift, and go to state 44
    '%'     shift, and go to state 45

    $default  reduce using rule 29 (expr)

    op  go to state 46


State 54

   30 expr: expr '-' term .
   32 term: term . op factor

    BITSIZ  shift, and go to state 41
    BISTDE  shift, and go to state 42
    '*'     shift, and go to state 43
    '/'     shift, and go to state 44
    '%'     shift, and go to state 45

    $default  reduce using rule 30 (expr)

    op  go to state 46


State 55

   42 comp: expr '>' '=' . expr

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 68
    term    go to state 24
    factor  go to state 25


State 56

   29 expr: expr . '+' term
   30     | expr . '-' term
   43 comp: expr '>' expr .

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 43 (comp)


State 57

   45 comp: expr '<' '=' . expr

    ID   shift, and go to state 31
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expr    go to state 69
    term    go to state 24
    factor  go to state 25


State 58

   29 expr: expr . '+' term
   30     | expr . '-' term
   44 comp: expr '<' expr .

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 44 (comp)


State 59

   32 term: term op factor .

    $default  reduce using rule 32 (term)


State 60

    9 iterativa_while: MIENTRAS '(' comp ')' . bloque

    '{'  shift, and go to state 70

    bloque  go to state 71


State 61

   10 condicional: IF '(' comp ')' . bloque

    '{'  shift, and go to state 70

    bloque  go to state 72


State 62

   41 factor: ID .
   47 sumaunaria: ID . SUMAUN

    SUMAUN  shift, and go to state 73

    $default  reduce using rule 41 (factor)


State 63

   17 asignacion: ID @3 '=' expresion .

    $default  reduce using rule 17 (asignacion)


State 64

   26 expresion: expr .
   29 expr: expr . '+' term
   30     | expr . '-' term
   42 comp: expr . '>' '=' expr
   43     | expr . '>' expr
   44     | expr . '<' expr
   45     | expr . '<' '=' expr
   46     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 36
    '+'       shift, and go to state 37
    '-'       shift, and go to state 38
    '>'       shift, and go to state 39
    '<'       shift, and go to state 40

    $default  reduce using rule 26 (expresion)


State 65

   27 expresion: comp .

    $default  reduce using rule 27 (expresion)


State 66

   28 expresion: sumaunaria .

    $default  reduce using rule 28 (expresion)


State 67

   15 declaracion: CONST identificador ID @1 . '=' $@2 expresion

    '='  shift, and go to state 74


State 68

   29 expr: expr . '+' term
   30     | expr . '-' term
   42 comp: expr '>' '=' expr .

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 42 (comp)


State 69

   29 expr: expr . '+' term
   30     | expr . '-' term
   45 comp: expr '<' '=' expr .

    '+'  shift, and go to state 37
    '-'  shift, and go to state 38

    $default  reduce using rule 45 (comp)


State 70

   11 bloque: '{' . listainst '}'

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 6
    SHORT     shift, and go to state 7
    DOUBLE    shift, and go to state 8
    FLOAT     shift, and go to state 9
    CHAR      shift, and go to state 10
    BOOL      shift, and go to state 11
    VOID      shift, and go to state 12
    CONST     shift, and go to state 13
    '('       shift, and go to state 14

    $default  reduce using rule 3 (listainst)

    listainst        go to state 75
    instr            go to state 17
    iterativa_while  go to state 18
    condicional      go to state 19
    declaracion      go to state 20
    asignacion       go to state 21
    identificador    go to state 22
    expr             go to state 23
    term             go to state 24
    factor           go to state 25
    comp             go to state 26


State 71

    9 iterativa_while: MIENTRAS '(' comp ')' bloque .

    $default  reduce using rule 9 (iterativa_while)


State 72

   10 condicional: IF '(' comp ')' bloque .

    $default  reduce using rule 10 (condicional)


State 73

   47 sumaunaria: ID SUMAUN .

    $default  reduce using rule 47 (sumaunaria)


State 74

   15 declaracion: CONST identificador ID @1 '=' . $@2 expresion

    $default  reduce using rule 14 ($@2)

    $@2  go to state 76


State 75

   11 bloque: '{' listainst . '}'

    '}'  shift, and go to state 77


State 76

   15 declaracion: CONST identificador ID @1 '=' $@2 . expresion

    ID   shift, and go to state 62
    NUM  shift, and go to state 4
    '('  shift, and go to state 14

    expresion   go to state 78
    expr        go to state 64
    term        go to state 24
    factor      go to state 25
    comp        go to state 65
    sumaunaria  go to state 66


State 77

   11 bloque: '{' listainst '}' .

    $default  reduce using rule 11 (bloque)


State 78

   15 declaracion: CONST identificador ID @1 '=' $@2 expresion .

    $default  reduce using rule 15 (declaracion)

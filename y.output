Terminals unused in grammar

    LONG
    SHORT
    DOUBLE
    CHAR
    BOOL
    VERDAD
    FALSO
    VOID


Grammar

    0 $accept: prog $end

    1 prog: listainst

    2 listainst: instr listainst
    3          | %empty

    4 instr: declaracion
    5      | asignacion
    6      | comp
    7      | iterativa_while
    8      | condicional

    9 iterativa_while: MIENTRAS '(' comp ')' bloque

   10 condicional: IF '(' comp ')' bloque else

   11 bloque: '{' listainst '}'

   12 declaracion: identificador ID

   13 @1: %empty

   14 asignacion: ID @1 '=' expresion

   15 identificador: INT
   16              | FLOAT

   17 expresion: expr
   18          | comp
   19          | sumaunaria

   20 expr: expr '+' term
   21     | expr '-' term
   22     | term

   23 term: term opmult factor
   24     | factor

   25 opmult: '*'

   26 factor: NUM
   27       | '(' expr ')'
   28       | ID

   29 comp: expr '>' '=' expr
   30     | expr '>' expr
   31     | expr '<' expr
   32     | expr IGUALDAD expr

   33 sumaunaria: ID SUMAUN

   34 else: %empty
   35     | OSISI '(' comp ')' bloque else
   36     | OSINO bloque


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 10 27 35
    ')' (41) 9 10 27 35
    '*' (42) 25
    '+' (43) 20
    '-' (45) 21
    '<' (60) 31
    '=' (61) 14 29
    '>' (62) 29 30
    '{' (123) 11
    '}' (125) 11
    error (256)
    MIENTRAS (258) 9
    IF (259) 10
    ID (260) 12 14 28 33
    NUM (261) 26
    SUMAUN (262) 33
    OSINO (263) 36
    OSISI (264) 35
    IGUALDAD (265) 32
    INT (266) 15
    LONG (267)
    SHORT (268)
    DOUBLE (269)
    FLOAT (270) 16
    CHAR (271)
    BOOL (272)
    VERDAD (273)
    FALSO (274)
    VOID (275)


Nonterminals, with rules where they appear

    $accept (31)
        on left: 0
    prog (32)
        on left: 1
        on right: 0
    listainst (33)
        on left: 2 3
        on right: 1 2 11
    instr (34)
        on left: 4 5 6 7 8
        on right: 2
    iterativa_while (35)
        on left: 9
        on right: 7
    condicional (36)
        on left: 10
        on right: 8
    bloque (37)
        on left: 11
        on right: 9 10 35 36
    declaracion (38)
        on left: 12
        on right: 4
    asignacion (39)
        on left: 14
        on right: 5
    @1 (40)
        on left: 13
        on right: 14
    identificador (41)
        on left: 15 16
        on right: 12
    expresion (42)
        on left: 17 18 19
        on right: 14
    expr (43)
        on left: 20 21 22
        on right: 17 20 21 27 29 30 31 32
    term (44)
        on left: 23 24
        on right: 20 21 22 23
    opmult (45)
        on left: 25
        on right: 23
    factor (46)
        on left: 26 27 28
        on right: 23 24
    comp (47)
        on left: 29 30 31 32
        on right: 6 9 10 18 35
    sumaunaria (48)
        on left: 33
        on right: 19
    else (49)
        on left: 34 35 36
        on right: 10 35


State 0

    0 $accept: . prog $end

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    '('       shift, and go to state 7

    $default  reduce using rule 3 (listainst)

    prog             go to state 8
    listainst        go to state 9
    instr            go to state 10
    iterativa_while  go to state 11
    condicional      go to state 12
    declaracion      go to state 13
    asignacion       go to state 14
    identificador    go to state 15
    expr             go to state 16
    term             go to state 17
    factor           go to state 18
    comp             go to state 19


State 1

    9 iterativa_while: MIENTRAS . '(' comp ')' bloque

    '('  shift, and go to state 20


State 2

   10 condicional: IF . '(' comp ')' bloque else

    '('  shift, and go to state 21


State 3

   14 asignacion: ID . @1 '=' expresion
   28 factor: ID .

    '='       reduce using rule 13 (@1)
    $default  reduce using rule 28 (factor)

    @1  go to state 22


State 4

   26 factor: NUM .

    $default  reduce using rule 26 (factor)


State 5

   15 identificador: INT .

    $default  reduce using rule 15 (identificador)


State 6

   16 identificador: FLOAT .

    $default  reduce using rule 16 (identificador)


State 7

   27 factor: '(' . expr ')'

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    expr    go to state 24
    term    go to state 17
    factor  go to state 18


State 8

    0 $accept: prog . $end

    $end  shift, and go to state 25


State 9

    1 prog: listainst .

    $default  reduce using rule 1 (prog)


State 10

    2 listainst: instr . listainst

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    '('       shift, and go to state 7

    $default  reduce using rule 3 (listainst)

    listainst        go to state 26
    instr            go to state 10
    iterativa_while  go to state 11
    condicional      go to state 12
    declaracion      go to state 13
    asignacion       go to state 14
    identificador    go to state 15
    expr             go to state 16
    term             go to state 17
    factor           go to state 18
    comp             go to state 19


State 11

    7 instr: iterativa_while .

    $default  reduce using rule 7 (instr)


State 12

    8 instr: condicional .

    $default  reduce using rule 8 (instr)


State 13

    4 instr: declaracion .

    $default  reduce using rule 4 (instr)


State 14

    5 instr: asignacion .

    $default  reduce using rule 5 (instr)


State 15

   12 declaracion: identificador . ID

    ID  shift, and go to state 27


State 16

   20 expr: expr . '+' term
   21     | expr . '-' term
   29 comp: expr . '>' '=' expr
   30     | expr . '>' expr
   31     | expr . '<' expr
   32     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 28
    '+'       shift, and go to state 29
    '-'       shift, and go to state 30
    '>'       shift, and go to state 31
    '<'       shift, and go to state 32


State 17

   22 expr: term .
   23 term: term . opmult factor

    '*'  shift, and go to state 33

    $default  reduce using rule 22 (expr)

    opmult  go to state 34


State 18

   24 term: factor .

    $default  reduce using rule 24 (term)


State 19

    6 instr: comp .

    $default  reduce using rule 6 (instr)


State 20

    9 iterativa_while: MIENTRAS '(' . comp ')' bloque

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    expr    go to state 16
    term    go to state 17
    factor  go to state 18
    comp    go to state 35


State 21

   10 condicional: IF '(' . comp ')' bloque else

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    expr    go to state 16
    term    go to state 17
    factor  go to state 18
    comp    go to state 36


State 22

   14 asignacion: ID @1 . '=' expresion

    '='  shift, and go to state 37


State 23

   28 factor: ID .

    $default  reduce using rule 28 (factor)


State 24

   20 expr: expr . '+' term
   21     | expr . '-' term
   27 factor: '(' expr . ')'

    ')'  shift, and go to state 38
    '+'  shift, and go to state 29
    '-'  shift, and go to state 30


State 25

    0 $accept: prog $end .

    $default  accept


State 26

    2 listainst: instr listainst .

    $default  reduce using rule 2 (listainst)


State 27

   12 declaracion: identificador ID .

    $default  reduce using rule 12 (declaracion)


State 28

   32 comp: expr IGUALDAD . expr

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    expr    go to state 39
    term    go to state 17
    factor  go to state 18


State 29

   20 expr: expr '+' . term

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    term    go to state 40
    factor  go to state 18


State 30

   21 expr: expr '-' . term

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    term    go to state 41
    factor  go to state 18


State 31

   29 comp: expr '>' . '=' expr
   30     | expr '>' . expr

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7
    '='  shift, and go to state 42

    expr    go to state 43
    term    go to state 17
    factor  go to state 18


State 32

   31 comp: expr '<' . expr

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    expr    go to state 44
    term    go to state 17
    factor  go to state 18


State 33

   25 opmult: '*' .

    $default  reduce using rule 25 (opmult)


State 34

   23 term: term opmult . factor

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    factor  go to state 45


State 35

    9 iterativa_while: MIENTRAS '(' comp . ')' bloque

    ')'  shift, and go to state 46


State 36

   10 condicional: IF '(' comp . ')' bloque else

    ')'  shift, and go to state 47


State 37

   14 asignacion: ID @1 '=' . expresion

    ID   shift, and go to state 48
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    expresion   go to state 49
    expr        go to state 50
    term        go to state 17
    factor      go to state 18
    comp        go to state 51
    sumaunaria  go to state 52


State 38

   27 factor: '(' expr ')' .

    $default  reduce using rule 27 (factor)


State 39

   20 expr: expr . '+' term
   21     | expr . '-' term
   32 comp: expr IGUALDAD expr .

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 32 (comp)


State 40

   20 expr: expr '+' term .
   23 term: term . opmult factor

    '*'  shift, and go to state 33

    $default  reduce using rule 20 (expr)

    opmult  go to state 34


State 41

   21 expr: expr '-' term .
   23 term: term . opmult factor

    '*'  shift, and go to state 33

    $default  reduce using rule 21 (expr)

    opmult  go to state 34


State 42

   29 comp: expr '>' '=' . expr

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    expr    go to state 53
    term    go to state 17
    factor  go to state 18


State 43

   20 expr: expr . '+' term
   21     | expr . '-' term
   30 comp: expr '>' expr .

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 30 (comp)


State 44

   20 expr: expr . '+' term
   21     | expr . '-' term
   31 comp: expr '<' expr .

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 31 (comp)


State 45

   23 term: term opmult factor .

    $default  reduce using rule 23 (term)


State 46

    9 iterativa_while: MIENTRAS '(' comp ')' . bloque

    '{'  shift, and go to state 54

    bloque  go to state 55


State 47

   10 condicional: IF '(' comp ')' . bloque else

    '{'  shift, and go to state 54

    bloque  go to state 56


State 48

   28 factor: ID .
   33 sumaunaria: ID . SUMAUN

    SUMAUN  shift, and go to state 57

    $default  reduce using rule 28 (factor)


State 49

   14 asignacion: ID @1 '=' expresion .

    $default  reduce using rule 14 (asignacion)


State 50

   17 expresion: expr .
   20 expr: expr . '+' term
   21     | expr . '-' term
   29 comp: expr . '>' '=' expr
   30     | expr . '>' expr
   31     | expr . '<' expr
   32     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 28
    '+'       shift, and go to state 29
    '-'       shift, and go to state 30
    '>'       shift, and go to state 31
    '<'       shift, and go to state 32

    $default  reduce using rule 17 (expresion)


State 51

   18 expresion: comp .

    $default  reduce using rule 18 (expresion)


State 52

   19 expresion: sumaunaria .

    $default  reduce using rule 19 (expresion)


State 53

   20 expr: expr . '+' term
   21     | expr . '-' term
   29 comp: expr '>' '=' expr .

    '+'  shift, and go to state 29
    '-'  shift, and go to state 30

    $default  reduce using rule 29 (comp)


State 54

   11 bloque: '{' . listainst '}'

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    FLOAT     shift, and go to state 6
    '('       shift, and go to state 7

    $default  reduce using rule 3 (listainst)

    listainst        go to state 58
    instr            go to state 10
    iterativa_while  go to state 11
    condicional      go to state 12
    declaracion      go to state 13
    asignacion       go to state 14
    identificador    go to state 15
    expr             go to state 16
    term             go to state 17
    factor           go to state 18
    comp             go to state 19


State 55

    9 iterativa_while: MIENTRAS '(' comp ')' bloque .

    $default  reduce using rule 9 (iterativa_while)


State 56

   10 condicional: IF '(' comp ')' bloque . else

    OSINO  shift, and go to state 59
    OSISI  shift, and go to state 60

    $default  reduce using rule 34 (else)

    else  go to state 61


State 57

   33 sumaunaria: ID SUMAUN .

    $default  reduce using rule 33 (sumaunaria)


State 58

   11 bloque: '{' listainst . '}'

    '}'  shift, and go to state 62


State 59

   36 else: OSINO . bloque

    '{'  shift, and go to state 54

    bloque  go to state 63


State 60

   35 else: OSISI . '(' comp ')' bloque else

    '('  shift, and go to state 64


State 61

   10 condicional: IF '(' comp ')' bloque else .

    $default  reduce using rule 10 (condicional)


State 62

   11 bloque: '{' listainst '}' .

    $default  reduce using rule 11 (bloque)


State 63

   36 else: OSINO bloque .

    $default  reduce using rule 36 (else)


State 64

   35 else: OSISI '(' . comp ')' bloque else

    ID   shift, and go to state 23
    NUM  shift, and go to state 4
    '('  shift, and go to state 7

    expr    go to state 16
    term    go to state 17
    factor  go to state 18
    comp    go to state 65


State 65

   35 else: OSISI '(' comp . ')' bloque else

    ')'  shift, and go to state 66


State 66

   35 else: OSISI '(' comp ')' . bloque else

    '{'  shift, and go to state 54

    bloque  go to state 67


State 67

   35 else: OSISI '(' comp ')' bloque . else

    OSINO  shift, and go to state 59
    OSISI  shift, and go to state 60

    $default  reduce using rule 34 (else)

    else  go to state 68


State 68

   35 else: OSISI '(' comp ')' bloque else .

    $default  reduce using rule 35 (else)

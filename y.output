Terminals unused in grammar

    VERDAD
    FALSO


Grammar

    0 $accept: prog $end

    1 prog: listainst

    2 listainst: instr listainst
    3          | %empty

    4 instr: declaracion
    5      | asignacion
    6      | comp
    7      | iterativa_while
    8      | iterativa_do
    9      | iterativa_for
   10      | CONTINUE
   11      | condicional

   12 iterativa_do: DO bloque MIENTRAS '(' comp ')'

   13 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' bloque

   14 iterativa_while: MIENTRAS '(' comp ')' bloque else

   15 condicional: IF '(' comp ')' bloque

   16 bloque: '{' listainst '}'

   17 declaracion: identificador ID

   18 @1: %empty

   19 declaracion: CONST identificador ID @1 '=' expresion

   20 @2: %empty

   21 asignacion: ID @2 '=' expresion

   22 identificador: INT
   23              | FLOAT
   24              | DOUBLE
   25              | CHAR
   26              | LONG
   27              | VOID
   28              | BOOL
   29              | SHORT

   30 expresion: expr
   31          | comp
   32          | sumaunaria

   33 expr: expr '+' term
   34     | expr '-' term
   35     | term

   36 term: term op factor
   37     | factor

   38 op: '*'
   39   | '/'
   40   | BITSIZ
   41   | BISTDE
   42   | '%'

   43 factor: NUM
   44       | '(' expr ')'
   45       | ID

   46 comp: expr '>' '=' expr
   47     | expr '>' expr
   48     | expr '<' expr
   49     | expr '<' '=' expr
   50     | expr IGUALDAD expr

   51 sumaunaria: ID SUMAUN

   52 else: OSINO bloque
   53     | OSISI '(' comp ')' bloque else
   54     | %empty


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 42
    '(' (40) 12 13 14 15 44 53
    ')' (41) 12 13 14 15 44 53
    '*' (42) 38
    '+' (43) 33
    '-' (45) 34
    '/' (47) 39
    ';' (59) 13
    '<' (60) 48 49
    '=' (61) 19 21 46 49
    '>' (62) 46 47
    '{' (123) 16
    '}' (125) 16
    error (256)
    MIENTRAS (258) 12 14
    IF (259) 15
    ID (260) 17 19 21 45 51
    NUM (261) 43
    SUMAUN (262) 51
    DO (263) 12
    FOR (264) 13
    IGUALDAD (265) 50
    OSINO (266) 52
    OSISI (267) 53
    CONTINUE (268) 10
    INT (269) 22
    LONG (270) 26
    SHORT (271) 29
    DOUBLE (272) 24
    FLOAT (273) 23
    CHAR (274) 25
    BOOL (275) 28
    VERDAD (276)
    FALSO (277)
    VOID (278) 27
    CONST (279) 19
    BITSIZ (280) 40
    BISTDE (281) 41


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    prog (41)
        on left: 1
        on right: 0
    listainst (42)
        on left: 2 3
        on right: 1 2 16
    instr (43)
        on left: 4 5 6 7 8 9 10 11
        on right: 2
    iterativa_do (44)
        on left: 12
        on right: 8
    iterativa_for (45)
        on left: 13
        on right: 9
    iterativa_while (46)
        on left: 14
        on right: 7
    condicional (47)
        on left: 15
        on right: 11
    bloque (48)
        on left: 16
        on right: 12 13 14 15 52 53
    declaracion (49)
        on left: 17 19
        on right: 4
    @1 (50)
        on left: 18
        on right: 19
    asignacion (51)
        on left: 21
        on right: 5 13
    @2 (52)
        on left: 20
        on right: 21
    identificador (53)
        on left: 22 23 24 25 26 27 28 29
        on right: 17 19
    expresion (54)
        on left: 30 31 32
        on right: 19 21
    expr (55)
        on left: 33 34 35
        on right: 30 33 34 44 46 47 48 49 50
    term (56)
        on left: 36 37
        on right: 33 34 35 36
    op (57)
        on left: 38 39 40 41 42
        on right: 36
    factor (58)
        on left: 43 44 45
        on right: 36 37
    comp (59)
        on left: 46 47 48 49 50
        on right: 6 12 13 14 15 31 53
    sumaunaria (60)
        on left: 51
        on right: 32
    else (61)
        on left: 52 53 54
        on right: 14 53


State 0

    0 $accept: . prog $end

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    DO        shift, and go to state 5
    FOR       shift, and go to state 6
    CONTINUE  shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 10
    DOUBLE    shift, and go to state 11
    FLOAT     shift, and go to state 12
    CHAR      shift, and go to state 13
    BOOL      shift, and go to state 14
    VOID      shift, and go to state 15
    CONST     shift, and go to state 16
    '('       shift, and go to state 17

    $default  reduce using rule 3 (listainst)

    prog             go to state 18
    listainst        go to state 19
    instr            go to state 20
    iterativa_do     go to state 21
    iterativa_for    go to state 22
    iterativa_while  go to state 23
    condicional      go to state 24
    declaracion      go to state 25
    asignacion       go to state 26
    identificador    go to state 27
    expr             go to state 28
    term             go to state 29
    factor           go to state 30
    comp             go to state 31


State 1

   14 iterativa_while: MIENTRAS . '(' comp ')' bloque else

    '('  shift, and go to state 32


State 2

   15 condicional: IF . '(' comp ')' bloque

    '('  shift, and go to state 33


State 3

   21 asignacion: ID . @2 '=' expresion
   45 factor: ID .

    '='       reduce using rule 20 (@2)
    $default  reduce using rule 45 (factor)

    @2  go to state 34


State 4

   43 factor: NUM .

    $default  reduce using rule 43 (factor)


State 5

   12 iterativa_do: DO . bloque MIENTRAS '(' comp ')'

    '{'  shift, and go to state 35

    bloque  go to state 36


State 6

   13 iterativa_for: FOR . '(' asignacion ';' comp ';' asignacion ')' bloque

    '('  shift, and go to state 37


State 7

   10 instr: CONTINUE .

    $default  reduce using rule 10 (instr)


State 8

   22 identificador: INT .

    $default  reduce using rule 22 (identificador)


State 9

   26 identificador: LONG .

    $default  reduce using rule 26 (identificador)


State 10

   29 identificador: SHORT .

    $default  reduce using rule 29 (identificador)


State 11

   24 identificador: DOUBLE .

    $default  reduce using rule 24 (identificador)


State 12

   23 identificador: FLOAT .

    $default  reduce using rule 23 (identificador)


State 13

   25 identificador: CHAR .

    $default  reduce using rule 25 (identificador)


State 14

   28 identificador: BOOL .

    $default  reduce using rule 28 (identificador)


State 15

   27 identificador: VOID .

    $default  reduce using rule 27 (identificador)


State 16

   19 declaracion: CONST . identificador ID @1 '=' expresion

    INT     shift, and go to state 8
    LONG    shift, and go to state 9
    SHORT   shift, and go to state 10
    DOUBLE  shift, and go to state 11
    FLOAT   shift, and go to state 12
    CHAR    shift, and go to state 13
    BOOL    shift, and go to state 14
    VOID    shift, and go to state 15

    identificador  go to state 38


State 17

   44 factor: '(' . expr ')'

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expr    go to state 40
    term    go to state 29
    factor  go to state 30


State 18

    0 $accept: prog . $end

    $end  shift, and go to state 41


State 19

    1 prog: listainst .

    $default  reduce using rule 1 (prog)


State 20

    2 listainst: instr . listainst

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    DO        shift, and go to state 5
    FOR       shift, and go to state 6
    CONTINUE  shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 10
    DOUBLE    shift, and go to state 11
    FLOAT     shift, and go to state 12
    CHAR      shift, and go to state 13
    BOOL      shift, and go to state 14
    VOID      shift, and go to state 15
    CONST     shift, and go to state 16
    '('       shift, and go to state 17

    $default  reduce using rule 3 (listainst)

    listainst        go to state 42
    instr            go to state 20
    iterativa_do     go to state 21
    iterativa_for    go to state 22
    iterativa_while  go to state 23
    condicional      go to state 24
    declaracion      go to state 25
    asignacion       go to state 26
    identificador    go to state 27
    expr             go to state 28
    term             go to state 29
    factor           go to state 30
    comp             go to state 31


State 21

    8 instr: iterativa_do .

    $default  reduce using rule 8 (instr)


State 22

    9 instr: iterativa_for .

    $default  reduce using rule 9 (instr)


State 23

    7 instr: iterativa_while .

    $default  reduce using rule 7 (instr)


State 24

   11 instr: condicional .

    $default  reduce using rule 11 (instr)


State 25

    4 instr: declaracion .

    $default  reduce using rule 4 (instr)


State 26

    5 instr: asignacion .

    $default  reduce using rule 5 (instr)


State 27

   17 declaracion: identificador . ID

    ID  shift, and go to state 43


State 28

   33 expr: expr . '+' term
   34     | expr . '-' term
   46 comp: expr . '>' '=' expr
   47     | expr . '>' expr
   48     | expr . '<' expr
   49     | expr . '<' '=' expr
   50     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 44
    '+'       shift, and go to state 45
    '-'       shift, and go to state 46
    '>'       shift, and go to state 47
    '<'       shift, and go to state 48


State 29

   35 expr: term .
   36 term: term . op factor

    BITSIZ  shift, and go to state 49
    BISTDE  shift, and go to state 50
    '*'     shift, and go to state 51
    '/'     shift, and go to state 52
    '%'     shift, and go to state 53

    $default  reduce using rule 35 (expr)

    op  go to state 54


State 30

   37 term: factor .

    $default  reduce using rule 37 (term)


State 31

    6 instr: comp .

    $default  reduce using rule 6 (instr)


State 32

   14 iterativa_while: MIENTRAS '(' . comp ')' bloque else

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expr    go to state 28
    term    go to state 29
    factor  go to state 30
    comp    go to state 55


State 33

   15 condicional: IF '(' . comp ')' bloque

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expr    go to state 28
    term    go to state 29
    factor  go to state 30
    comp    go to state 56


State 34

   21 asignacion: ID @2 . '=' expresion

    '='  shift, and go to state 57


State 35

   16 bloque: '{' . listainst '}'

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    DO        shift, and go to state 5
    FOR       shift, and go to state 6
    CONTINUE  shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 10
    DOUBLE    shift, and go to state 11
    FLOAT     shift, and go to state 12
    CHAR      shift, and go to state 13
    BOOL      shift, and go to state 14
    VOID      shift, and go to state 15
    CONST     shift, and go to state 16
    '('       shift, and go to state 17

    $default  reduce using rule 3 (listainst)

    listainst        go to state 58
    instr            go to state 20
    iterativa_do     go to state 21
    iterativa_for    go to state 22
    iterativa_while  go to state 23
    condicional      go to state 24
    declaracion      go to state 25
    asignacion       go to state 26
    identificador    go to state 27
    expr             go to state 28
    term             go to state 29
    factor           go to state 30
    comp             go to state 31


State 36

   12 iterativa_do: DO bloque . MIENTRAS '(' comp ')'

    MIENTRAS  shift, and go to state 59


State 37

   13 iterativa_for: FOR '(' . asignacion ';' comp ';' asignacion ')' bloque

    ID  shift, and go to state 60

    asignacion  go to state 61


State 38

   19 declaracion: CONST identificador . ID @1 '=' expresion

    ID  shift, and go to state 62


State 39

   45 factor: ID .

    $default  reduce using rule 45 (factor)


State 40

   33 expr: expr . '+' term
   34     | expr . '-' term
   44 factor: '(' expr . ')'

    ')'  shift, and go to state 63
    '+'  shift, and go to state 45
    '-'  shift, and go to state 46


State 41

    0 $accept: prog $end .

    $default  accept


State 42

    2 listainst: instr listainst .

    $default  reduce using rule 2 (listainst)


State 43

   17 declaracion: identificador ID .

    $default  reduce using rule 17 (declaracion)


State 44

   50 comp: expr IGUALDAD . expr

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expr    go to state 64
    term    go to state 29
    factor  go to state 30


State 45

   33 expr: expr '+' . term

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    term    go to state 65
    factor  go to state 30


State 46

   34 expr: expr '-' . term

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    term    go to state 66
    factor  go to state 30


State 47

   46 comp: expr '>' . '=' expr
   47     | expr '>' . expr

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17
    '='  shift, and go to state 67

    expr    go to state 68
    term    go to state 29
    factor  go to state 30


State 48

   48 comp: expr '<' . expr
   49     | expr '<' . '=' expr

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17
    '='  shift, and go to state 69

    expr    go to state 70
    term    go to state 29
    factor  go to state 30


State 49

   40 op: BITSIZ .

    $default  reduce using rule 40 (op)


State 50

   41 op: BISTDE .

    $default  reduce using rule 41 (op)


State 51

   38 op: '*' .

    $default  reduce using rule 38 (op)


State 52

   39 op: '/' .

    $default  reduce using rule 39 (op)


State 53

   42 op: '%' .

    $default  reduce using rule 42 (op)


State 54

   36 term: term op . factor

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    factor  go to state 71


State 55

   14 iterativa_while: MIENTRAS '(' comp . ')' bloque else

    ')'  shift, and go to state 72


State 56

   15 condicional: IF '(' comp . ')' bloque

    ')'  shift, and go to state 73


State 57

   21 asignacion: ID @2 '=' . expresion

    ID   shift, and go to state 74
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expresion   go to state 75
    expr        go to state 76
    term        go to state 29
    factor      go to state 30
    comp        go to state 77
    sumaunaria  go to state 78


State 58

   16 bloque: '{' listainst . '}'

    '}'  shift, and go to state 79


State 59

   12 iterativa_do: DO bloque MIENTRAS . '(' comp ')'

    '('  shift, and go to state 80


State 60

   21 asignacion: ID . @2 '=' expresion

    $default  reduce using rule 20 (@2)

    @2  go to state 34


State 61

   13 iterativa_for: FOR '(' asignacion . ';' comp ';' asignacion ')' bloque

    ';'  shift, and go to state 81


State 62

   19 declaracion: CONST identificador ID . @1 '=' expresion

    $default  reduce using rule 18 (@1)

    @1  go to state 82


State 63

   44 factor: '(' expr ')' .

    $default  reduce using rule 44 (factor)


State 64

   33 expr: expr . '+' term
   34     | expr . '-' term
   50 comp: expr IGUALDAD expr .

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 50 (comp)


State 65

   33 expr: expr '+' term .
   36 term: term . op factor

    BITSIZ  shift, and go to state 49
    BISTDE  shift, and go to state 50
    '*'     shift, and go to state 51
    '/'     shift, and go to state 52
    '%'     shift, and go to state 53

    $default  reduce using rule 33 (expr)

    op  go to state 54


State 66

   34 expr: expr '-' term .
   36 term: term . op factor

    BITSIZ  shift, and go to state 49
    BISTDE  shift, and go to state 50
    '*'     shift, and go to state 51
    '/'     shift, and go to state 52
    '%'     shift, and go to state 53

    $default  reduce using rule 34 (expr)

    op  go to state 54


State 67

   46 comp: expr '>' '=' . expr

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expr    go to state 83
    term    go to state 29
    factor  go to state 30


State 68

   33 expr: expr . '+' term
   34     | expr . '-' term
   47 comp: expr '>' expr .

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 47 (comp)


State 69

   49 comp: expr '<' '=' . expr

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expr    go to state 84
    term    go to state 29
    factor  go to state 30


State 70

   33 expr: expr . '+' term
   34     | expr . '-' term
   48 comp: expr '<' expr .

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 48 (comp)


State 71

   36 term: term op factor .

    $default  reduce using rule 36 (term)


State 72

   14 iterativa_while: MIENTRAS '(' comp ')' . bloque else

    '{'  shift, and go to state 35

    bloque  go to state 85


State 73

   15 condicional: IF '(' comp ')' . bloque

    '{'  shift, and go to state 35

    bloque  go to state 86


State 74

   45 factor: ID .
   51 sumaunaria: ID . SUMAUN

    SUMAUN  shift, and go to state 87

    $default  reduce using rule 45 (factor)


State 75

   21 asignacion: ID @2 '=' expresion .

    $default  reduce using rule 21 (asignacion)


State 76

   30 expresion: expr .
   33 expr: expr . '+' term
   34     | expr . '-' term
   46 comp: expr . '>' '=' expr
   47     | expr . '>' expr
   48     | expr . '<' expr
   49     | expr . '<' '=' expr
   50     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 44
    '+'       shift, and go to state 45
    '-'       shift, and go to state 46
    '>'       shift, and go to state 47
    '<'       shift, and go to state 48

    $default  reduce using rule 30 (expresion)


State 77

   31 expresion: comp .

    $default  reduce using rule 31 (expresion)


State 78

   32 expresion: sumaunaria .

    $default  reduce using rule 32 (expresion)


State 79

   16 bloque: '{' listainst '}' .

    $default  reduce using rule 16 (bloque)


State 80

   12 iterativa_do: DO bloque MIENTRAS '(' . comp ')'

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expr    go to state 28
    term    go to state 29
    factor  go to state 30
    comp    go to state 88


State 81

   13 iterativa_for: FOR '(' asignacion ';' . comp ';' asignacion ')' bloque

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expr    go to state 28
    term    go to state 29
    factor  go to state 30
    comp    go to state 89


State 82

   19 declaracion: CONST identificador ID @1 . '=' expresion

    '='  shift, and go to state 90


State 83

   33 expr: expr . '+' term
   34     | expr . '-' term
   46 comp: expr '>' '=' expr .

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 46 (comp)


State 84

   33 expr: expr . '+' term
   34     | expr . '-' term
   49 comp: expr '<' '=' expr .

    '+'  shift, and go to state 45
    '-'  shift, and go to state 46

    $default  reduce using rule 49 (comp)


State 85

   14 iterativa_while: MIENTRAS '(' comp ')' bloque . else

    OSINO  shift, and go to state 91
    OSISI  shift, and go to state 92

    $default  reduce using rule 54 (else)

    else  go to state 93


State 86

   15 condicional: IF '(' comp ')' bloque .

    $default  reduce using rule 15 (condicional)


State 87

   51 sumaunaria: ID SUMAUN .

    $default  reduce using rule 51 (sumaunaria)


State 88

   12 iterativa_do: DO bloque MIENTRAS '(' comp . ')'

    ')'  shift, and go to state 94


State 89

   13 iterativa_for: FOR '(' asignacion ';' comp . ';' asignacion ')' bloque

    ';'  shift, and go to state 95


State 90

   19 declaracion: CONST identificador ID @1 '=' . expresion

    ID   shift, and go to state 74
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expresion   go to state 96
    expr        go to state 76
    term        go to state 29
    factor      go to state 30
    comp        go to state 77
    sumaunaria  go to state 78


State 91

   52 else: OSINO . bloque

    '{'  shift, and go to state 35

    bloque  go to state 97


State 92

   53 else: OSISI . '(' comp ')' bloque else

    '('  shift, and go to state 98


State 93

   14 iterativa_while: MIENTRAS '(' comp ')' bloque else .

    $default  reduce using rule 14 (iterativa_while)


State 94

   12 iterativa_do: DO bloque MIENTRAS '(' comp ')' .

    $default  reduce using rule 12 (iterativa_do)


State 95

   13 iterativa_for: FOR '(' asignacion ';' comp ';' . asignacion ')' bloque

    ID  shift, and go to state 60

    asignacion  go to state 99


State 96

   19 declaracion: CONST identificador ID @1 '=' expresion .

    $default  reduce using rule 19 (declaracion)


State 97

   52 else: OSINO bloque .

    $default  reduce using rule 52 (else)


State 98

   53 else: OSISI '(' . comp ')' bloque else

    ID   shift, and go to state 39
    NUM  shift, and go to state 4
    '('  shift, and go to state 17

    expr    go to state 28
    term    go to state 29
    factor  go to state 30
    comp    go to state 100


State 99

   13 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion . ')' bloque

    ')'  shift, and go to state 101


State 100

   53 else: OSISI '(' comp . ')' bloque else

    ')'  shift, and go to state 102


State 101

   13 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' . bloque

    '{'  shift, and go to state 35

    bloque  go to state 103


State 102

   53 else: OSISI '(' comp ')' . bloque else

    '{'  shift, and go to state 35

    bloque  go to state 104


State 103

   13 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' bloque .

    $default  reduce using rule 13 (iterativa_for)


State 104

   53 else: OSISI '(' comp ')' bloque . else

    OSINO  shift, and go to state 91
    OSISI  shift, and go to state 92

    $default  reduce using rule 54 (else)

    else  go to state 105


State 105

   53 else: OSISI '(' comp ')' bloque else .

    $default  reduce using rule 53 (else)

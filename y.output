Terminals unused in grammar

    VERDAD
    FALSO


Grammar

    0 $accept: prog $end

    1 prog: listainst

    2 listainst: instr listainst
    3          | %empty

    4 instr: declaracion
    5      | asignacion
    6      | comp
    7      | iterativa_while
    8      | iterativa_do
    9      | iterativa_for
   10      | CONTINUE
   11      | RETURN
   12      | BREAK
   13      | PASS
   14      | condicional

   15 iterativa_do: DO bloque WHILE '(' comp ')'

   16 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' bloque

   17 iterativa_while: WHILE '(' comp ')' bloque else

   18 condicional: IF '(' comp ')' bloque

   19 bloque: '{' listainst '}'

   20 declaracion: identificador ID

   21 @1: %empty

   22 declaracion: CONST identificador ID @1 '=' expresion

   23 @2: %empty

   24 asignacion: ID @2 '=' expresion

   25 identificador: INT
   26              | FLOAT
   27              | DOUBLE
   28              | CHAR
   29              | LONG
   30              | VOID
   31              | BOOL
   32              | SHORT

   33 expresion: expr
   34          | comp
   35          | sumaunaria

   36 expr: expr '+' term
   37     | expr '-' term
   38     | term

   39 term: term op factor
   40     | factor

   41 op: '*'
   42   | '/'
   43   | BITSIZ
   44   | BISTDE
   45   | '%'

   46 factor: NUM
   47       | '(' expr ')'
   48       | ID

   49 comp: expr '>' '=' expr
   50     | expr '>' expr
   51     | expr '<' expr
   52     | expr '<' '=' expr
   53     | expr IGUALDAD expr

   54 sumaunaria: ID SUMAUN
   55           | ID RESTAUN

   56 else: ELSE bloque
   57     | ELIF '(' comp ')' bloque else
   58     | %empty


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 45
    '(' (40) 15 16 17 18 47 57
    ')' (41) 15 16 17 18 47 57
    '*' (42) 41
    '+' (43) 36
    '-' (45) 37
    '/' (47) 42
    ';' (59) 16
    '<' (60) 51 52
    '=' (61) 22 24 49 52
    '>' (62) 49 50
    '{' (123) 19
    '}' (125) 19
    error (256)
    WHILE (258) 15 17
    IF (259) 18
    ID (260) 20 22 24 48 54 55
    NUM (261) 46
    SUMAUN (262) 54
    DO (263) 15
    FOR (264) 16
    IGUALDAD (265) 53
    ELSE (266) 56
    ELIF (267) 57
    CONTINUE (268) 10
    RESTAUN (269) 55
    INT (270) 25
    LONG (271) 29
    SHORT (272) 32
    DOUBLE (273) 27
    FLOAT (274) 26
    CHAR (275) 28
    BOOL (276) 31
    VERDAD (277)
    FALSO (278)
    VOID (279) 30
    CONST (280) 22
    BITSIZ (281) 43
    BISTDE (282) 44
    RETURN (283) 11
    BREAK (284) 12
    PASS (285) 13


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    prog (45)
        on left: 1
        on right: 0
    listainst (46)
        on left: 2 3
        on right: 1 2 19
    instr (47)
        on left: 4 5 6 7 8 9 10 11 12 13 14
        on right: 2
    iterativa_do (48)
        on left: 15
        on right: 8
    iterativa_for (49)
        on left: 16
        on right: 9
    iterativa_while (50)
        on left: 17
        on right: 7
    condicional (51)
        on left: 18
        on right: 14
    bloque (52)
        on left: 19
        on right: 15 16 17 18 56 57
    declaracion (53)
        on left: 20 22
        on right: 4
    @1 (54)
        on left: 21
        on right: 22
    asignacion (55)
        on left: 24
        on right: 5 16
    @2 (56)
        on left: 23
        on right: 24
    identificador (57)
        on left: 25 26 27 28 29 30 31 32
        on right: 20 22
    expresion (58)
        on left: 33 34 35
        on right: 22 24
    expr (59)
        on left: 36 37 38
        on right: 33 36 37 47 49 50 51 52 53
    term (60)
        on left: 39 40
        on right: 36 37 38 39
    op (61)
        on left: 41 42 43 44 45
        on right: 39
    factor (62)
        on left: 46 47 48
        on right: 39 40
    comp (63)
        on left: 49 50 51 52 53
        on right: 6 15 16 17 18 34 57
    sumaunaria (64)
        on left: 54 55
        on right: 35
    else (65)
        on left: 56 57 58
        on right: 17 57


State 0

    0 $accept: . prog $end

    WHILE     shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    DO        shift, and go to state 5
    FOR       shift, and go to state 6
    CONTINUE  shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 10
    DOUBLE    shift, and go to state 11
    FLOAT     shift, and go to state 12
    CHAR      shift, and go to state 13
    BOOL      shift, and go to state 14
    VOID      shift, and go to state 15
    CONST     shift, and go to state 16
    RETURN    shift, and go to state 17
    BREAK     shift, and go to state 18
    PASS      shift, and go to state 19
    '('       shift, and go to state 20

    $default  reduce using rule 3 (listainst)

    prog             go to state 21
    listainst        go to state 22
    instr            go to state 23
    iterativa_do     go to state 24
    iterativa_for    go to state 25
    iterativa_while  go to state 26
    condicional      go to state 27
    declaracion      go to state 28
    asignacion       go to state 29
    identificador    go to state 30
    expr             go to state 31
    term             go to state 32
    factor           go to state 33
    comp             go to state 34


State 1

   17 iterativa_while: WHILE . '(' comp ')' bloque else

    '('  shift, and go to state 35


State 2

   18 condicional: IF . '(' comp ')' bloque

    '('  shift, and go to state 36


State 3

   24 asignacion: ID . @2 '=' expresion
   48 factor: ID .

    '='       reduce using rule 23 (@2)
    $default  reduce using rule 48 (factor)

    @2  go to state 37


State 4

   46 factor: NUM .

    $default  reduce using rule 46 (factor)


State 5

   15 iterativa_do: DO . bloque WHILE '(' comp ')'

    '{'  shift, and go to state 38

    bloque  go to state 39


State 6

   16 iterativa_for: FOR . '(' asignacion ';' comp ';' asignacion ')' bloque

    '('  shift, and go to state 40


State 7

   10 instr: CONTINUE .

    $default  reduce using rule 10 (instr)


State 8

   25 identificador: INT .

    $default  reduce using rule 25 (identificador)


State 9

   29 identificador: LONG .

    $default  reduce using rule 29 (identificador)


State 10

   32 identificador: SHORT .

    $default  reduce using rule 32 (identificador)


State 11

   27 identificador: DOUBLE .

    $default  reduce using rule 27 (identificador)


State 12

   26 identificador: FLOAT .

    $default  reduce using rule 26 (identificador)


State 13

   28 identificador: CHAR .

    $default  reduce using rule 28 (identificador)


State 14

   31 identificador: BOOL .

    $default  reduce using rule 31 (identificador)


State 15

   30 identificador: VOID .

    $default  reduce using rule 30 (identificador)


State 16

   22 declaracion: CONST . identificador ID @1 '=' expresion

    INT     shift, and go to state 8
    LONG    shift, and go to state 9
    SHORT   shift, and go to state 10
    DOUBLE  shift, and go to state 11
    FLOAT   shift, and go to state 12
    CHAR    shift, and go to state 13
    BOOL    shift, and go to state 14
    VOID    shift, and go to state 15

    identificador  go to state 41


State 17

   11 instr: RETURN .

    $default  reduce using rule 11 (instr)


State 18

   12 instr: BREAK .

    $default  reduce using rule 12 (instr)


State 19

   13 instr: PASS .

    $default  reduce using rule 13 (instr)


State 20

   47 factor: '(' . expr ')'

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expr    go to state 43
    term    go to state 32
    factor  go to state 33


State 21

    0 $accept: prog . $end

    $end  shift, and go to state 44


State 22

    1 prog: listainst .

    $default  reduce using rule 1 (prog)


State 23

    2 listainst: instr . listainst

    WHILE     shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    DO        shift, and go to state 5
    FOR       shift, and go to state 6
    CONTINUE  shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 10
    DOUBLE    shift, and go to state 11
    FLOAT     shift, and go to state 12
    CHAR      shift, and go to state 13
    BOOL      shift, and go to state 14
    VOID      shift, and go to state 15
    CONST     shift, and go to state 16
    RETURN    shift, and go to state 17
    BREAK     shift, and go to state 18
    PASS      shift, and go to state 19
    '('       shift, and go to state 20

    $default  reduce using rule 3 (listainst)

    listainst        go to state 45
    instr            go to state 23
    iterativa_do     go to state 24
    iterativa_for    go to state 25
    iterativa_while  go to state 26
    condicional      go to state 27
    declaracion      go to state 28
    asignacion       go to state 29
    identificador    go to state 30
    expr             go to state 31
    term             go to state 32
    factor           go to state 33
    comp             go to state 34


State 24

    8 instr: iterativa_do .

    $default  reduce using rule 8 (instr)


State 25

    9 instr: iterativa_for .

    $default  reduce using rule 9 (instr)


State 26

    7 instr: iterativa_while .

    $default  reduce using rule 7 (instr)


State 27

   14 instr: condicional .

    $default  reduce using rule 14 (instr)


State 28

    4 instr: declaracion .

    $default  reduce using rule 4 (instr)


State 29

    5 instr: asignacion .

    $default  reduce using rule 5 (instr)


State 30

   20 declaracion: identificador . ID

    ID  shift, and go to state 46


State 31

   36 expr: expr . '+' term
   37     | expr . '-' term
   49 comp: expr . '>' '=' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . '<' '=' expr
   53     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 47
    '+'       shift, and go to state 48
    '-'       shift, and go to state 49
    '>'       shift, and go to state 50
    '<'       shift, and go to state 51


State 32

   38 expr: term .
   39 term: term . op factor

    BITSIZ  shift, and go to state 52
    BISTDE  shift, and go to state 53
    '*'     shift, and go to state 54
    '/'     shift, and go to state 55
    '%'     shift, and go to state 56

    $default  reduce using rule 38 (expr)

    op  go to state 57


State 33

   40 term: factor .

    $default  reduce using rule 40 (term)


State 34

    6 instr: comp .

    $default  reduce using rule 6 (instr)


State 35

   17 iterativa_while: WHILE '(' . comp ')' bloque else

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expr    go to state 31
    term    go to state 32
    factor  go to state 33
    comp    go to state 58


State 36

   18 condicional: IF '(' . comp ')' bloque

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expr    go to state 31
    term    go to state 32
    factor  go to state 33
    comp    go to state 59


State 37

   24 asignacion: ID @2 . '=' expresion

    '='  shift, and go to state 60


State 38

   19 bloque: '{' . listainst '}'

    WHILE     shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    DO        shift, and go to state 5
    FOR       shift, and go to state 6
    CONTINUE  shift, and go to state 7
    INT       shift, and go to state 8
    LONG      shift, and go to state 9
    SHORT     shift, and go to state 10
    DOUBLE    shift, and go to state 11
    FLOAT     shift, and go to state 12
    CHAR      shift, and go to state 13
    BOOL      shift, and go to state 14
    VOID      shift, and go to state 15
    CONST     shift, and go to state 16
    RETURN    shift, and go to state 17
    BREAK     shift, and go to state 18
    PASS      shift, and go to state 19
    '('       shift, and go to state 20

    $default  reduce using rule 3 (listainst)

    listainst        go to state 61
    instr            go to state 23
    iterativa_do     go to state 24
    iterativa_for    go to state 25
    iterativa_while  go to state 26
    condicional      go to state 27
    declaracion      go to state 28
    asignacion       go to state 29
    identificador    go to state 30
    expr             go to state 31
    term             go to state 32
    factor           go to state 33
    comp             go to state 34


State 39

   15 iterativa_do: DO bloque . WHILE '(' comp ')'

    WHILE  shift, and go to state 62


State 40

   16 iterativa_for: FOR '(' . asignacion ';' comp ';' asignacion ')' bloque

    ID  shift, and go to state 63

    asignacion  go to state 64


State 41

   22 declaracion: CONST identificador . ID @1 '=' expresion

    ID  shift, and go to state 65


State 42

   48 factor: ID .

    $default  reduce using rule 48 (factor)


State 43

   36 expr: expr . '+' term
   37     | expr . '-' term
   47 factor: '(' expr . ')'

    ')'  shift, and go to state 66
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49


State 44

    0 $accept: prog $end .

    $default  accept


State 45

    2 listainst: instr listainst .

    $default  reduce using rule 2 (listainst)


State 46

   20 declaracion: identificador ID .

    $default  reduce using rule 20 (declaracion)


State 47

   53 comp: expr IGUALDAD . expr

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expr    go to state 67
    term    go to state 32
    factor  go to state 33


State 48

   36 expr: expr '+' . term

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    term    go to state 68
    factor  go to state 33


State 49

   37 expr: expr '-' . term

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    term    go to state 69
    factor  go to state 33


State 50

   49 comp: expr '>' . '=' expr
   50     | expr '>' . expr

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20
    '='  shift, and go to state 70

    expr    go to state 71
    term    go to state 32
    factor  go to state 33


State 51

   51 comp: expr '<' . expr
   52     | expr '<' . '=' expr

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20
    '='  shift, and go to state 72

    expr    go to state 73
    term    go to state 32
    factor  go to state 33


State 52

   43 op: BITSIZ .

    $default  reduce using rule 43 (op)


State 53

   44 op: BISTDE .

    $default  reduce using rule 44 (op)


State 54

   41 op: '*' .

    $default  reduce using rule 41 (op)


State 55

   42 op: '/' .

    $default  reduce using rule 42 (op)


State 56

   45 op: '%' .

    $default  reduce using rule 45 (op)


State 57

   39 term: term op . factor

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    factor  go to state 74


State 58

   17 iterativa_while: WHILE '(' comp . ')' bloque else

    ')'  shift, and go to state 75


State 59

   18 condicional: IF '(' comp . ')' bloque

    ')'  shift, and go to state 76


State 60

   24 asignacion: ID @2 '=' . expresion

    ID   shift, and go to state 77
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expresion   go to state 78
    expr        go to state 79
    term        go to state 32
    factor      go to state 33
    comp        go to state 80
    sumaunaria  go to state 81


State 61

   19 bloque: '{' listainst . '}'

    '}'  shift, and go to state 82


State 62

   15 iterativa_do: DO bloque WHILE . '(' comp ')'

    '('  shift, and go to state 83


State 63

   24 asignacion: ID . @2 '=' expresion

    $default  reduce using rule 23 (@2)

    @2  go to state 37


State 64

   16 iterativa_for: FOR '(' asignacion . ';' comp ';' asignacion ')' bloque

    ';'  shift, and go to state 84


State 65

   22 declaracion: CONST identificador ID . @1 '=' expresion

    $default  reduce using rule 21 (@1)

    @1  go to state 85


State 66

   47 factor: '(' expr ')' .

    $default  reduce using rule 47 (factor)


State 67

   36 expr: expr . '+' term
   37     | expr . '-' term
   53 comp: expr IGUALDAD expr .

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49

    $default  reduce using rule 53 (comp)


State 68

   36 expr: expr '+' term .
   39 term: term . op factor

    BITSIZ  shift, and go to state 52
    BISTDE  shift, and go to state 53
    '*'     shift, and go to state 54
    '/'     shift, and go to state 55
    '%'     shift, and go to state 56

    $default  reduce using rule 36 (expr)

    op  go to state 57


State 69

   37 expr: expr '-' term .
   39 term: term . op factor

    BITSIZ  shift, and go to state 52
    BISTDE  shift, and go to state 53
    '*'     shift, and go to state 54
    '/'     shift, and go to state 55
    '%'     shift, and go to state 56

    $default  reduce using rule 37 (expr)

    op  go to state 57


State 70

   49 comp: expr '>' '=' . expr

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expr    go to state 86
    term    go to state 32
    factor  go to state 33


State 71

   36 expr: expr . '+' term
   37     | expr . '-' term
   50 comp: expr '>' expr .

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49

    $default  reduce using rule 50 (comp)


State 72

   52 comp: expr '<' '=' . expr

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expr    go to state 87
    term    go to state 32
    factor  go to state 33


State 73

   36 expr: expr . '+' term
   37     | expr . '-' term
   51 comp: expr '<' expr .

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49

    $default  reduce using rule 51 (comp)


State 74

   39 term: term op factor .

    $default  reduce using rule 39 (term)


State 75

   17 iterativa_while: WHILE '(' comp ')' . bloque else

    '{'  shift, and go to state 38

    bloque  go to state 88


State 76

   18 condicional: IF '(' comp ')' . bloque

    '{'  shift, and go to state 38

    bloque  go to state 89


State 77

   48 factor: ID .
   54 sumaunaria: ID . SUMAUN
   55           | ID . RESTAUN

    SUMAUN   shift, and go to state 90
    RESTAUN  shift, and go to state 91

    $default  reduce using rule 48 (factor)


State 78

   24 asignacion: ID @2 '=' expresion .

    $default  reduce using rule 24 (asignacion)


State 79

   33 expresion: expr .
   36 expr: expr . '+' term
   37     | expr . '-' term
   49 comp: expr . '>' '=' expr
   50     | expr . '>' expr
   51     | expr . '<' expr
   52     | expr . '<' '=' expr
   53     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 47
    '+'       shift, and go to state 48
    '-'       shift, and go to state 49
    '>'       shift, and go to state 50
    '<'       shift, and go to state 51

    $default  reduce using rule 33 (expresion)


State 80

   34 expresion: comp .

    $default  reduce using rule 34 (expresion)


State 81

   35 expresion: sumaunaria .

    $default  reduce using rule 35 (expresion)


State 82

   19 bloque: '{' listainst '}' .

    $default  reduce using rule 19 (bloque)


State 83

   15 iterativa_do: DO bloque WHILE '(' . comp ')'

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expr    go to state 31
    term    go to state 32
    factor  go to state 33
    comp    go to state 92


State 84

   16 iterativa_for: FOR '(' asignacion ';' . comp ';' asignacion ')' bloque

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expr    go to state 31
    term    go to state 32
    factor  go to state 33
    comp    go to state 93


State 85

   22 declaracion: CONST identificador ID @1 . '=' expresion

    '='  shift, and go to state 94


State 86

   36 expr: expr . '+' term
   37     | expr . '-' term
   49 comp: expr '>' '=' expr .

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49

    $default  reduce using rule 49 (comp)


State 87

   36 expr: expr . '+' term
   37     | expr . '-' term
   52 comp: expr '<' '=' expr .

    '+'  shift, and go to state 48
    '-'  shift, and go to state 49

    $default  reduce using rule 52 (comp)


State 88

   17 iterativa_while: WHILE '(' comp ')' bloque . else

    ELSE  shift, and go to state 95
    ELIF  shift, and go to state 96

    $default  reduce using rule 58 (else)

    else  go to state 97


State 89

   18 condicional: IF '(' comp ')' bloque .

    $default  reduce using rule 18 (condicional)


State 90

   54 sumaunaria: ID SUMAUN .

    $default  reduce using rule 54 (sumaunaria)


State 91

   55 sumaunaria: ID RESTAUN .

    $default  reduce using rule 55 (sumaunaria)


State 92

   15 iterativa_do: DO bloque WHILE '(' comp . ')'

    ')'  shift, and go to state 98


State 93

   16 iterativa_for: FOR '(' asignacion ';' comp . ';' asignacion ')' bloque

    ';'  shift, and go to state 99


State 94

   22 declaracion: CONST identificador ID @1 '=' . expresion

    ID   shift, and go to state 77
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expresion   go to state 100
    expr        go to state 79
    term        go to state 32
    factor      go to state 33
    comp        go to state 80
    sumaunaria  go to state 81


State 95

   56 else: ELSE . bloque

    '{'  shift, and go to state 38

    bloque  go to state 101


State 96

   57 else: ELIF . '(' comp ')' bloque else

    '('  shift, and go to state 102


State 97

   17 iterativa_while: WHILE '(' comp ')' bloque else .

    $default  reduce using rule 17 (iterativa_while)


State 98

   15 iterativa_do: DO bloque WHILE '(' comp ')' .

    $default  reduce using rule 15 (iterativa_do)


State 99

   16 iterativa_for: FOR '(' asignacion ';' comp ';' . asignacion ')' bloque

    ID  shift, and go to state 63

    asignacion  go to state 103


State 100

   22 declaracion: CONST identificador ID @1 '=' expresion .

    $default  reduce using rule 22 (declaracion)


State 101

   56 else: ELSE bloque .

    $default  reduce using rule 56 (else)


State 102

   57 else: ELIF '(' . comp ')' bloque else

    ID   shift, and go to state 42
    NUM  shift, and go to state 4
    '('  shift, and go to state 20

    expr    go to state 31
    term    go to state 32
    factor  go to state 33
    comp    go to state 104


State 103

   16 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion . ')' bloque

    ')'  shift, and go to state 105


State 104

   57 else: ELIF '(' comp . ')' bloque else

    ')'  shift, and go to state 106


State 105

   16 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' . bloque

    '{'  shift, and go to state 38

    bloque  go to state 107


State 106

   57 else: ELIF '(' comp ')' . bloque else

    '{'  shift, and go to state 38

    bloque  go to state 108


State 107

   16 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' bloque .

    $default  reduce using rule 16 (iterativa_for)


State 108

   57 else: ELIF '(' comp ')' bloque . else

    ELSE  shift, and go to state 95
    ELIF  shift, and go to state 96

    $default  reduce using rule 58 (else)

    else  go to state 109


State 109

   57 else: ELIF '(' comp ')' bloque else .

    $default  reduce using rule 57 (else)

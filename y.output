Grammar

    0 $accept: prog $end

    1 prog: listainst

    2 listainst: instr listainst
    3          | %empty

    4 instr: declaracion
    5      | asignacion
    6      | comp
    7      | iterativa_while
    8      | iterativa_do
    9      | iterativa_for
   10      | CONTINUE
   11      | RETURN
   12      | BREAK
   13      | PASS
   14      | condicional
   15      | imprimir
   16      | leer
   17      | comentario
   18      | funcion

   19 comentario: comentarioSimple
   20           | comentarioComplejo

   21 comentarioSimple: COMENTARIOSIMPLE

   22 comentarioComplejo: COMENTARIOCOMPLEJO

   23 imprimir: PRINT '(' expr ')'

   24 leer: SCAN '(' expr ')'

   25 iterativa_do: DO bloque WHILE '(' comp ')'

   26 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' bloque

   27 iterativa_while: WHILE '(' comp ')' bloque else

   28 condicional: IF '(' comp ')' bloque

   29 bloque: '{' listainst '}'

   30 declaracion: identificador ID

   31 @1: %empty

   32 declaracion: CONST identificador ID @1 '=' expresion

   33 @2: %empty

   34 asignacion: ID @2 asignaciones

   35 asignaciones: '=' expresion
   36             | INCREMENTO
   37             | DECREMENTO
   38             | AUMENTO expresion
   39             | DISMINUCION expresion
   40             | MULTI expresion
   41             | DIVI expresion
   42             | MOD expresion

   43 identificador: INT
   44              | FLOAT
   45              | DOUBLE
   46              | CHAR
   47              | LONG
   48              | VOID
   49              | BOOL
   50              | SHORT

   51 expresion: expr
   52          | comp

   53 expr: expr '+' term
   54     | expr '-' term
   55     | term

   56 term: term op factor
   57     | factor

   58 op: '*'
   59   | '/'
   60   | BITSIZ
   61   | BITSDE
   62   | '%'

   63 factor: NUM
   64       | '(' expr ')'
   65       | ID
   66       | VERDAD
   67       | FALSO

   68 comp: expr '>' '=' expr
   69     | expr '>' expr
   70     | expr '<' expr
   71     | expr '<' '=' expr
   72     | expr IGUALDAD expr
   73     | expr DESIGUALDAD expr
   74     | expr exp_logica expr

   75 else: ELSE bloque
   76     | ELIF '(' comp ')' bloque else
   77     | %empty

   78 funcion: DE_TIPO '(' identificador ')'
   79        | NEGACION '(' expr ')'

   80 exp_logica: AND
   81           | OR
   82           | NAND
   83           | XOR
   84           | NOR


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 62
    '(' (40) 23 24 25 26 27 28 64 76 78 79
    ')' (41) 23 24 25 26 27 28 64 76 78 79
    '*' (42) 58
    '+' (43) 53
    '-' (45) 54
    '/' (47) 59
    ';' (59) 26
    '<' (60) 70 71
    '=' (61) 32 35 68 71
    '>' (62) 68 69
    '{' (123) 29
    '}' (125) 29
    error (256)
    WHILE (258) 25 27
    IF (259) 28
    ID (260) 30 32 34 65
    NUM (261) 63
    DO (262) 25
    FOR (263) 26
    IGUALDAD (264) 72
    ELSE (265) 75
    ELIF (266) 76
    CONTINUE (267) 10
    INT (268) 43
    LONG (269) 47
    SHORT (270) 50
    DOUBLE (271) 45
    FLOAT (272) 44
    CHAR (273) 46
    BOOL (274) 49
    VERDAD (275) 66
    FALSO (276) 67
    VOID (277) 48
    CONST (278) 32
    BITSIZ (279) 60
    BITSDE (280) 61
    RETURN (281) 11
    BREAK (282) 12
    PASS (283) 13
    INCREMENTO (284) 36
    DECREMENTO (285) 37
    AUMENTO (286) 38
    DISMINUCION (287) 39
    MULTI (288) 40
    DIVI (289) 41
    MOD (290) 42
    PRINT (291) 23
    COMENTARIOSIMPLE (292) 21
    COMENTARIOCOMPLEJO (293) 22
    DE_TIPO (294) 78
    DESIGUALDAD (295) 73
    SCAN (296) 24
    NEGACION (297) 79
    AND (298) 80
    OR (299) 81
    NAND (300) 82
    XOR (301) 83
    NOR (302) 84


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    prog (62)
        on left: 1
        on right: 0
    listainst (63)
        on left: 2 3
        on right: 1 2 29
    instr (64)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
        on right: 2
    comentario (65)
        on left: 19 20
        on right: 17
    comentarioSimple (66)
        on left: 21
        on right: 19
    comentarioComplejo (67)
        on left: 22
        on right: 20
    imprimir (68)
        on left: 23
        on right: 15
    leer (69)
        on left: 24
        on right: 16
    iterativa_do (70)
        on left: 25
        on right: 8
    iterativa_for (71)
        on left: 26
        on right: 9
    iterativa_while (72)
        on left: 27
        on right: 7
    condicional (73)
        on left: 28
        on right: 14
    bloque (74)
        on left: 29
        on right: 25 26 27 28 75 76
    declaracion (75)
        on left: 30 32
        on right: 4
    @1 (76)
        on left: 31
        on right: 32
    asignacion (77)
        on left: 34
        on right: 5 26
    @2 (78)
        on left: 33
        on right: 34
    asignaciones (79)
        on left: 35 36 37 38 39 40 41 42
        on right: 34
    identificador (80)
        on left: 43 44 45 46 47 48 49 50
        on right: 30 32 78
    expresion (81)
        on left: 51 52
        on right: 32 35 38 39 40 41 42
    expr (82)
        on left: 53 54 55
        on right: 23 24 51 53 54 64 68 69 70 71 72 73 74 79
    term (83)
        on left: 56 57
        on right: 53 54 55 56
    op (84)
        on left: 58 59 60 61 62
        on right: 56
    factor (85)
        on left: 63 64 65 66 67
        on right: 56 57
    comp (86)
        on left: 68 69 70 71 72 73 74
        on right: 6 25 26 27 28 52 76
    else (87)
        on left: 75 76 77
        on right: 27 76
    funcion (88)
        on left: 78 79
        on right: 18
    exp_logica (89)
        on left: 80 81 82 83 84
        on right: 74


State 0

    0 $accept: . prog $end

    WHILE               shift, and go to state 1
    IF                  shift, and go to state 2
    ID                  shift, and go to state 3
    NUM                 shift, and go to state 4
    DO                  shift, and go to state 5
    FOR                 shift, and go to state 6
    CONTINUE            shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    SHORT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    FLOAT               shift, and go to state 12
    CHAR                shift, and go to state 13
    BOOL                shift, and go to state 14
    VERDAD              shift, and go to state 15
    FALSO               shift, and go to state 16
    VOID                shift, and go to state 17
    CONST               shift, and go to state 18
    RETURN              shift, and go to state 19
    BREAK               shift, and go to state 20
    PASS                shift, and go to state 21
    PRINT               shift, and go to state 22
    COMENTARIOSIMPLE    shift, and go to state 23
    COMENTARIOCOMPLEJO  shift, and go to state 24
    DE_TIPO             shift, and go to state 25
    SCAN                shift, and go to state 26
    NEGACION            shift, and go to state 27
    '('                 shift, and go to state 28

    $default  reduce using rule 3 (listainst)

    prog                go to state 29
    listainst           go to state 30
    instr               go to state 31
    comentario          go to state 32
    comentarioSimple    go to state 33
    comentarioComplejo  go to state 34
    imprimir            go to state 35
    leer                go to state 36
    iterativa_do        go to state 37
    iterativa_for       go to state 38
    iterativa_while     go to state 39
    condicional         go to state 40
    declaracion         go to state 41
    asignacion          go to state 42
    identificador       go to state 43
    expr                go to state 44
    term                go to state 45
    factor              go to state 46
    comp                go to state 47
    funcion             go to state 48


State 1

   27 iterativa_while: WHILE . '(' comp ')' bloque else

    '('  shift, and go to state 49


State 2

   28 condicional: IF . '(' comp ')' bloque

    '('  shift, and go to state 50


State 3

   34 asignacion: ID . @2 asignaciones
   65 factor: ID .

    INCREMENTO   reduce using rule 33 (@2)
    DECREMENTO   reduce using rule 33 (@2)
    AUMENTO      reduce using rule 33 (@2)
    DISMINUCION  reduce using rule 33 (@2)
    MULTI        reduce using rule 33 (@2)
    DIVI         reduce using rule 33 (@2)
    MOD          reduce using rule 33 (@2)
    '='          reduce using rule 33 (@2)
    $default     reduce using rule 65 (factor)

    @2  go to state 51


State 4

   63 factor: NUM .

    $default  reduce using rule 63 (factor)


State 5

   25 iterativa_do: DO . bloque WHILE '(' comp ')'

    '{'  shift, and go to state 52

    bloque  go to state 53


State 6

   26 iterativa_for: FOR . '(' asignacion ';' comp ';' asignacion ')' bloque

    '('  shift, and go to state 54


State 7

   10 instr: CONTINUE .

    $default  reduce using rule 10 (instr)


State 8

   43 identificador: INT .

    $default  reduce using rule 43 (identificador)


State 9

   47 identificador: LONG .

    $default  reduce using rule 47 (identificador)


State 10

   50 identificador: SHORT .

    $default  reduce using rule 50 (identificador)


State 11

   45 identificador: DOUBLE .

    $default  reduce using rule 45 (identificador)


State 12

   44 identificador: FLOAT .

    $default  reduce using rule 44 (identificador)


State 13

   46 identificador: CHAR .

    $default  reduce using rule 46 (identificador)


State 14

   49 identificador: BOOL .

    $default  reduce using rule 49 (identificador)


State 15

   66 factor: VERDAD .

    $default  reduce using rule 66 (factor)


State 16

   67 factor: FALSO .

    $default  reduce using rule 67 (factor)


State 17

   48 identificador: VOID .

    $default  reduce using rule 48 (identificador)


State 18

   32 declaracion: CONST . identificador ID @1 '=' expresion

    INT     shift, and go to state 8
    LONG    shift, and go to state 9
    SHORT   shift, and go to state 10
    DOUBLE  shift, and go to state 11
    FLOAT   shift, and go to state 12
    CHAR    shift, and go to state 13
    BOOL    shift, and go to state 14
    VOID    shift, and go to state 17

    identificador  go to state 55


State 19

   11 instr: RETURN .

    $default  reduce using rule 11 (instr)


State 20

   12 instr: BREAK .

    $default  reduce using rule 12 (instr)


State 21

   13 instr: PASS .

    $default  reduce using rule 13 (instr)


State 22

   23 imprimir: PRINT . '(' expr ')'

    '('  shift, and go to state 56


State 23

   21 comentarioSimple: COMENTARIOSIMPLE .

    $default  reduce using rule 21 (comentarioSimple)


State 24

   22 comentarioComplejo: COMENTARIOCOMPLEJO .

    $default  reduce using rule 22 (comentarioComplejo)


State 25

   78 funcion: DE_TIPO . '(' identificador ')'

    '('  shift, and go to state 57


State 26

   24 leer: SCAN . '(' expr ')'

    '('  shift, and go to state 58


State 27

   79 funcion: NEGACION . '(' expr ')'

    '('  shift, and go to state 59


State 28

   64 factor: '(' . expr ')'

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 61
    term    go to state 45
    factor  go to state 46


State 29

    0 $accept: prog . $end

    $end  shift, and go to state 62


State 30

    1 prog: listainst .

    $default  reduce using rule 1 (prog)


State 31

    2 listainst: instr . listainst

    WHILE               shift, and go to state 1
    IF                  shift, and go to state 2
    ID                  shift, and go to state 3
    NUM                 shift, and go to state 4
    DO                  shift, and go to state 5
    FOR                 shift, and go to state 6
    CONTINUE            shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    SHORT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    FLOAT               shift, and go to state 12
    CHAR                shift, and go to state 13
    BOOL                shift, and go to state 14
    VERDAD              shift, and go to state 15
    FALSO               shift, and go to state 16
    VOID                shift, and go to state 17
    CONST               shift, and go to state 18
    RETURN              shift, and go to state 19
    BREAK               shift, and go to state 20
    PASS                shift, and go to state 21
    PRINT               shift, and go to state 22
    COMENTARIOSIMPLE    shift, and go to state 23
    COMENTARIOCOMPLEJO  shift, and go to state 24
    DE_TIPO             shift, and go to state 25
    SCAN                shift, and go to state 26
    NEGACION            shift, and go to state 27
    '('                 shift, and go to state 28

    $default  reduce using rule 3 (listainst)

    listainst           go to state 63
    instr               go to state 31
    comentario          go to state 32
    comentarioSimple    go to state 33
    comentarioComplejo  go to state 34
    imprimir            go to state 35
    leer                go to state 36
    iterativa_do        go to state 37
    iterativa_for       go to state 38
    iterativa_while     go to state 39
    condicional         go to state 40
    declaracion         go to state 41
    asignacion          go to state 42
    identificador       go to state 43
    expr                go to state 44
    term                go to state 45
    factor              go to state 46
    comp                go to state 47
    funcion             go to state 48


State 32

   17 instr: comentario .

    $default  reduce using rule 17 (instr)


State 33

   19 comentario: comentarioSimple .

    $default  reduce using rule 19 (comentario)


State 34

   20 comentario: comentarioComplejo .

    $default  reduce using rule 20 (comentario)


State 35

   15 instr: imprimir .

    $default  reduce using rule 15 (instr)


State 36

   16 instr: leer .

    $default  reduce using rule 16 (instr)


State 37

    8 instr: iterativa_do .

    $default  reduce using rule 8 (instr)


State 38

    9 instr: iterativa_for .

    $default  reduce using rule 9 (instr)


State 39

    7 instr: iterativa_while .

    $default  reduce using rule 7 (instr)


State 40

   14 instr: condicional .

    $default  reduce using rule 14 (instr)


State 41

    4 instr: declaracion .

    $default  reduce using rule 4 (instr)


State 42

    5 instr: asignacion .

    $default  reduce using rule 5 (instr)


State 43

   30 declaracion: identificador . ID

    ID  shift, and go to state 64


State 44

   53 expr: expr . '+' term
   54     | expr . '-' term
   68 comp: expr . '>' '=' expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '<' '=' expr
   72     | expr . IGUALDAD expr
   73     | expr . DESIGUALDAD expr
   74     | expr . exp_logica expr

    IGUALDAD     shift, and go to state 65
    DESIGUALDAD  shift, and go to state 66
    AND          shift, and go to state 67
    OR           shift, and go to state 68
    NAND         shift, and go to state 69
    XOR          shift, and go to state 70
    NOR          shift, and go to state 71
    '+'          shift, and go to state 72
    '-'          shift, and go to state 73
    '>'          shift, and go to state 74
    '<'          shift, and go to state 75

    exp_logica  go to state 76


State 45

   55 expr: term .
   56 term: term . op factor

    BITSIZ  shift, and go to state 77
    BITSDE  shift, and go to state 78
    '*'     shift, and go to state 79
    '/'     shift, and go to state 80
    '%'     shift, and go to state 81

    $default  reduce using rule 55 (expr)

    op  go to state 82


State 46

   57 term: factor .

    $default  reduce using rule 57 (term)


State 47

    6 instr: comp .

    $default  reduce using rule 6 (instr)


State 48

   18 instr: funcion .

    $default  reduce using rule 18 (instr)


State 49

   27 iterativa_while: WHILE '(' . comp ')' bloque else

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 44
    term    go to state 45
    factor  go to state 46
    comp    go to state 83


State 50

   28 condicional: IF '(' . comp ')' bloque

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 44
    term    go to state 45
    factor  go to state 46
    comp    go to state 84


State 51

   34 asignacion: ID @2 . asignaciones

    INCREMENTO   shift, and go to state 85
    DECREMENTO   shift, and go to state 86
    AUMENTO      shift, and go to state 87
    DISMINUCION  shift, and go to state 88
    MULTI        shift, and go to state 89
    DIVI         shift, and go to state 90
    MOD          shift, and go to state 91
    '='          shift, and go to state 92

    asignaciones  go to state 93


State 52

   29 bloque: '{' . listainst '}'

    WHILE               shift, and go to state 1
    IF                  shift, and go to state 2
    ID                  shift, and go to state 3
    NUM                 shift, and go to state 4
    DO                  shift, and go to state 5
    FOR                 shift, and go to state 6
    CONTINUE            shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    SHORT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    FLOAT               shift, and go to state 12
    CHAR                shift, and go to state 13
    BOOL                shift, and go to state 14
    VERDAD              shift, and go to state 15
    FALSO               shift, and go to state 16
    VOID                shift, and go to state 17
    CONST               shift, and go to state 18
    RETURN              shift, and go to state 19
    BREAK               shift, and go to state 20
    PASS                shift, and go to state 21
    PRINT               shift, and go to state 22
    COMENTARIOSIMPLE    shift, and go to state 23
    COMENTARIOCOMPLEJO  shift, and go to state 24
    DE_TIPO             shift, and go to state 25
    SCAN                shift, and go to state 26
    NEGACION            shift, and go to state 27
    '('                 shift, and go to state 28

    $default  reduce using rule 3 (listainst)

    listainst           go to state 94
    instr               go to state 31
    comentario          go to state 32
    comentarioSimple    go to state 33
    comentarioComplejo  go to state 34
    imprimir            go to state 35
    leer                go to state 36
    iterativa_do        go to state 37
    iterativa_for       go to state 38
    iterativa_while     go to state 39
    condicional         go to state 40
    declaracion         go to state 41
    asignacion          go to state 42
    identificador       go to state 43
    expr                go to state 44
    term                go to state 45
    factor              go to state 46
    comp                go to state 47
    funcion             go to state 48


State 53

   25 iterativa_do: DO bloque . WHILE '(' comp ')'

    WHILE  shift, and go to state 95


State 54

   26 iterativa_for: FOR '(' . asignacion ';' comp ';' asignacion ')' bloque

    ID  shift, and go to state 96

    asignacion  go to state 97


State 55

   32 declaracion: CONST identificador . ID @1 '=' expresion

    ID  shift, and go to state 98


State 56

   23 imprimir: PRINT '(' . expr ')'

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 99
    term    go to state 45
    factor  go to state 46


State 57

   78 funcion: DE_TIPO '(' . identificador ')'

    INT     shift, and go to state 8
    LONG    shift, and go to state 9
    SHORT   shift, and go to state 10
    DOUBLE  shift, and go to state 11
    FLOAT   shift, and go to state 12
    CHAR    shift, and go to state 13
    BOOL    shift, and go to state 14
    VOID    shift, and go to state 17

    identificador  go to state 100


State 58

   24 leer: SCAN '(' . expr ')'

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 101
    term    go to state 45
    factor  go to state 46


State 59

   79 funcion: NEGACION '(' . expr ')'

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 102
    term    go to state 45
    factor  go to state 46


State 60

   65 factor: ID .

    $default  reduce using rule 65 (factor)


State 61

   53 expr: expr . '+' term
   54     | expr . '-' term
   64 factor: '(' expr . ')'

    ')'  shift, and go to state 103
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73


State 62

    0 $accept: prog $end .

    $default  accept


State 63

    2 listainst: instr listainst .

    $default  reduce using rule 2 (listainst)


State 64

   30 declaracion: identificador ID .

    $default  reduce using rule 30 (declaracion)


State 65

   72 comp: expr IGUALDAD . expr

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 104
    term    go to state 45
    factor  go to state 46


State 66

   73 comp: expr DESIGUALDAD . expr

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 105
    term    go to state 45
    factor  go to state 46


State 67

   80 exp_logica: AND .

    $default  reduce using rule 80 (exp_logica)


State 68

   81 exp_logica: OR .

    $default  reduce using rule 81 (exp_logica)


State 69

   82 exp_logica: NAND .

    $default  reduce using rule 82 (exp_logica)


State 70

   83 exp_logica: XOR .

    $default  reduce using rule 83 (exp_logica)


State 71

   84 exp_logica: NOR .

    $default  reduce using rule 84 (exp_logica)


State 72

   53 expr: expr '+' . term

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    term    go to state 106
    factor  go to state 46


State 73

   54 expr: expr '-' . term

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    term    go to state 107
    factor  go to state 46


State 74

   68 comp: expr '>' . '=' expr
   69     | expr '>' . expr

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28
    '='     shift, and go to state 108

    expr    go to state 109
    term    go to state 45
    factor  go to state 46


State 75

   70 comp: expr '<' . expr
   71     | expr '<' . '=' expr

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28
    '='     shift, and go to state 110

    expr    go to state 111
    term    go to state 45
    factor  go to state 46


State 76

   74 comp: expr exp_logica . expr

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 112
    term    go to state 45
    factor  go to state 46


State 77

   60 op: BITSIZ .

    $default  reduce using rule 60 (op)


State 78

   61 op: BITSDE .

    $default  reduce using rule 61 (op)


State 79

   58 op: '*' .

    $default  reduce using rule 58 (op)


State 80

   59 op: '/' .

    $default  reduce using rule 59 (op)


State 81

   62 op: '%' .

    $default  reduce using rule 62 (op)


State 82

   56 term: term op . factor

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    factor  go to state 113


State 83

   27 iterativa_while: WHILE '(' comp . ')' bloque else

    ')'  shift, and go to state 114


State 84

   28 condicional: IF '(' comp . ')' bloque

    ')'  shift, and go to state 115


State 85

   36 asignaciones: INCREMENTO .

    $default  reduce using rule 36 (asignaciones)


State 86

   37 asignaciones: DECREMENTO .

    $default  reduce using rule 37 (asignaciones)


State 87

   38 asignaciones: AUMENTO . expresion

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 116
    expr       go to state 117
    term       go to state 45
    factor     go to state 46
    comp       go to state 118


State 88

   39 asignaciones: DISMINUCION . expresion

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 119
    expr       go to state 117
    term       go to state 45
    factor     go to state 46
    comp       go to state 118


State 89

   40 asignaciones: MULTI . expresion

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 120
    expr       go to state 117
    term       go to state 45
    factor     go to state 46
    comp       go to state 118


State 90

   41 asignaciones: DIVI . expresion

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 121
    expr       go to state 117
    term       go to state 45
    factor     go to state 46
    comp       go to state 118


State 91

   42 asignaciones: MOD . expresion

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 122
    expr       go to state 117
    term       go to state 45
    factor     go to state 46
    comp       go to state 118


State 92

   35 asignaciones: '=' . expresion

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 123
    expr       go to state 117
    term       go to state 45
    factor     go to state 46
    comp       go to state 118


State 93

   34 asignacion: ID @2 asignaciones .

    $default  reduce using rule 34 (asignacion)


State 94

   29 bloque: '{' listainst . '}'

    '}'  shift, and go to state 124


State 95

   25 iterativa_do: DO bloque WHILE . '(' comp ')'

    '('  shift, and go to state 125


State 96

   34 asignacion: ID . @2 asignaciones

    $default  reduce using rule 33 (@2)

    @2  go to state 51


State 97

   26 iterativa_for: FOR '(' asignacion . ';' comp ';' asignacion ')' bloque

    ';'  shift, and go to state 126


State 98

   32 declaracion: CONST identificador ID . @1 '=' expresion

    $default  reduce using rule 31 (@1)

    @1  go to state 127


State 99

   23 imprimir: PRINT '(' expr . ')'
   53 expr: expr . '+' term
   54     | expr . '-' term

    ')'  shift, and go to state 128
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73


State 100

   78 funcion: DE_TIPO '(' identificador . ')'

    ')'  shift, and go to state 129


State 101

   24 leer: SCAN '(' expr . ')'
   53 expr: expr . '+' term
   54     | expr . '-' term

    ')'  shift, and go to state 130
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73


State 102

   53 expr: expr . '+' term
   54     | expr . '-' term
   79 funcion: NEGACION '(' expr . ')'

    ')'  shift, and go to state 131
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73


State 103

   64 factor: '(' expr ')' .

    $default  reduce using rule 64 (factor)


State 104

   53 expr: expr . '+' term
   54     | expr . '-' term
   72 comp: expr IGUALDAD expr .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 72 (comp)


State 105

   53 expr: expr . '+' term
   54     | expr . '-' term
   73 comp: expr DESIGUALDAD expr .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 73 (comp)


State 106

   53 expr: expr '+' term .
   56 term: term . op factor

    BITSIZ  shift, and go to state 77
    BITSDE  shift, and go to state 78
    '*'     shift, and go to state 79
    '/'     shift, and go to state 80
    '%'     shift, and go to state 81

    $default  reduce using rule 53 (expr)

    op  go to state 82


State 107

   54 expr: expr '-' term .
   56 term: term . op factor

    BITSIZ  shift, and go to state 77
    BITSDE  shift, and go to state 78
    '*'     shift, and go to state 79
    '/'     shift, and go to state 80
    '%'     shift, and go to state 81

    $default  reduce using rule 54 (expr)

    op  go to state 82


State 108

   68 comp: expr '>' '=' . expr

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 132
    term    go to state 45
    factor  go to state 46


State 109

   53 expr: expr . '+' term
   54     | expr . '-' term
   69 comp: expr '>' expr .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 69 (comp)


State 110

   71 comp: expr '<' '=' . expr

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 133
    term    go to state 45
    factor  go to state 46


State 111

   53 expr: expr . '+' term
   54     | expr . '-' term
   70 comp: expr '<' expr .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 70 (comp)


State 112

   53 expr: expr . '+' term
   54     | expr . '-' term
   74 comp: expr exp_logica expr .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 74 (comp)


State 113

   56 term: term op factor .

    $default  reduce using rule 56 (term)


State 114

   27 iterativa_while: WHILE '(' comp ')' . bloque else

    '{'  shift, and go to state 52

    bloque  go to state 134


State 115

   28 condicional: IF '(' comp ')' . bloque

    '{'  shift, and go to state 52

    bloque  go to state 135


State 116

   38 asignaciones: AUMENTO expresion .

    $default  reduce using rule 38 (asignaciones)


State 117

   51 expresion: expr .
   53 expr: expr . '+' term
   54     | expr . '-' term
   68 comp: expr . '>' '=' expr
   69     | expr . '>' expr
   70     | expr . '<' expr
   71     | expr . '<' '=' expr
   72     | expr . IGUALDAD expr
   73     | expr . DESIGUALDAD expr
   74     | expr . exp_logica expr

    IGUALDAD     shift, and go to state 65
    DESIGUALDAD  shift, and go to state 66
    AND          shift, and go to state 67
    OR           shift, and go to state 68
    NAND         shift, and go to state 69
    XOR          shift, and go to state 70
    NOR          shift, and go to state 71
    '+'          shift, and go to state 72
    '-'          shift, and go to state 73
    '>'          shift, and go to state 74
    '<'          shift, and go to state 75

    $default  reduce using rule 51 (expresion)

    exp_logica  go to state 76


State 118

   52 expresion: comp .

    $default  reduce using rule 52 (expresion)


State 119

   39 asignaciones: DISMINUCION expresion .

    $default  reduce using rule 39 (asignaciones)


State 120

   40 asignaciones: MULTI expresion .

    $default  reduce using rule 40 (asignaciones)


State 121

   41 asignaciones: DIVI expresion .

    $default  reduce using rule 41 (asignaciones)


State 122

   42 asignaciones: MOD expresion .

    $default  reduce using rule 42 (asignaciones)


State 123

   35 asignaciones: '=' expresion .

    $default  reduce using rule 35 (asignaciones)


State 124

   29 bloque: '{' listainst '}' .

    $default  reduce using rule 29 (bloque)


State 125

   25 iterativa_do: DO bloque WHILE '(' . comp ')'

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 44
    term    go to state 45
    factor  go to state 46
    comp    go to state 136


State 126

   26 iterativa_for: FOR '(' asignacion ';' . comp ';' asignacion ')' bloque

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 44
    term    go to state 45
    factor  go to state 46
    comp    go to state 137


State 127

   32 declaracion: CONST identificador ID @1 . '=' expresion

    '='  shift, and go to state 138


State 128

   23 imprimir: PRINT '(' expr ')' .

    $default  reduce using rule 23 (imprimir)


State 129

   78 funcion: DE_TIPO '(' identificador ')' .

    $default  reduce using rule 78 (funcion)


State 130

   24 leer: SCAN '(' expr ')' .

    $default  reduce using rule 24 (leer)


State 131

   79 funcion: NEGACION '(' expr ')' .

    $default  reduce using rule 79 (funcion)


State 132

   53 expr: expr . '+' term
   54     | expr . '-' term
   68 comp: expr '>' '=' expr .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 68 (comp)


State 133

   53 expr: expr . '+' term
   54     | expr . '-' term
   71 comp: expr '<' '=' expr .

    '+'  shift, and go to state 72
    '-'  shift, and go to state 73

    $default  reduce using rule 71 (comp)


State 134

   27 iterativa_while: WHILE '(' comp ')' bloque . else

    ELSE  shift, and go to state 139
    ELIF  shift, and go to state 140

    $default  reduce using rule 77 (else)

    else  go to state 141


State 135

   28 condicional: IF '(' comp ')' bloque .

    $default  reduce using rule 28 (condicional)


State 136

   25 iterativa_do: DO bloque WHILE '(' comp . ')'

    ')'  shift, and go to state 142


State 137

   26 iterativa_for: FOR '(' asignacion ';' comp . ';' asignacion ')' bloque

    ';'  shift, and go to state 143


State 138

   32 declaracion: CONST identificador ID @1 '=' . expresion

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 144
    expr       go to state 117
    term       go to state 45
    factor     go to state 46
    comp       go to state 118


State 139

   75 else: ELSE . bloque

    '{'  shift, and go to state 52

    bloque  go to state 145


State 140

   76 else: ELIF . '(' comp ')' bloque else

    '('  shift, and go to state 146


State 141

   27 iterativa_while: WHILE '(' comp ')' bloque else .

    $default  reduce using rule 27 (iterativa_while)


State 142

   25 iterativa_do: DO bloque WHILE '(' comp ')' .

    $default  reduce using rule 25 (iterativa_do)


State 143

   26 iterativa_for: FOR '(' asignacion ';' comp ';' . asignacion ')' bloque

    ID  shift, and go to state 96

    asignacion  go to state 147


State 144

   32 declaracion: CONST identificador ID @1 '=' expresion .

    $default  reduce using rule 32 (declaracion)


State 145

   75 else: ELSE bloque .

    $default  reduce using rule 75 (else)


State 146

   76 else: ELIF '(' . comp ')' bloque else

    ID      shift, and go to state 60
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 44
    term    go to state 45
    factor  go to state 46
    comp    go to state 148


State 147

   26 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion . ')' bloque

    ')'  shift, and go to state 149


State 148

   76 else: ELIF '(' comp . ')' bloque else

    ')'  shift, and go to state 150


State 149

   26 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' . bloque

    '{'  shift, and go to state 52

    bloque  go to state 151


State 150

   76 else: ELIF '(' comp ')' . bloque else

    '{'  shift, and go to state 52

    bloque  go to state 152


State 151

   26 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' bloque .

    $default  reduce using rule 26 (iterativa_for)


State 152

   76 else: ELIF '(' comp ')' bloque . else

    ELSE  shift, and go to state 139
    ELIF  shift, and go to state 140

    $default  reduce using rule 77 (else)

    else  go to state 153


State 153

   76 else: ELIF '(' comp ')' bloque else .

    $default  reduce using rule 76 (else)

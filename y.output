Terminals unused in grammar

    COMPMAYOR
    COMPMENOR
    COMPMAYORIGUAL
    COMPMENORIGUAL
    COMPIGUAL
    COMPDESIGUAL
    COMPLOGICO
    SALTARF
    SALTAR
    COMPAND
    COMPOR
    COMPNAND
    ASIGNAR
    INCREMENTAR
    DECREMENTAR
    AUMENTAR
    DISMINUIR
    SUMAR
    RESTAR
    MULTIPLICAR
    DIVIDIR
    MODULAR
    COMPXOR
    COMPNOR
    MOVERBDE
    MOVERBIZ


Grammar

    0 $accept: prog $end

    1 prog: listainst

    2 listainst: instr listainst
    3          | %empty

    4 instr: declaracion
    5      | asignacion
    6      | incremento
    7      | decrementar
    8      | aumentavalor
    9      | disminuyevalor
   10      | multiplicavalor
   11      | dividevalor
   12      | modulavalor
   13      | comp
   14      | iterativa_while
   15      | iterativa_do
   16      | iterativa_for
   17      | CONTINUE
   18      | RETURN
   19      | BREAK
   20      | PASS
   21      | condicional
   22      | imprimir
   23      | leer
   24      | comentario
   25      | funcion

   26 comentario: comentarioSimple
   27           | comentarioComplejo

   28 comentarioSimple: COMENTARIOSIMPLE

   29 comentarioComplejo: COMENTARIOCOMPLEJO

   30 imprimir: PRINT '(' expr ')'

   31 leer: SCAN '(' expr ')'

   32 iterativa_do: DO bloque WHILE '(' comp ')'

   33 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' bloque

   34 @1: %empty

   35 @2: %empty

   36 @3: %empty

   37 iterativa_while: WHILE '(' @1 comp @2 ')' bloque @3

   38 @4: %empty

   39 $@5: %empty

   40 condicional: IF '(' comp ')' @4 bloque $@5 else

   41 bloque: '{' listainst '}'

   42 declaracion: identificador ID

   43 @6: %empty

   44 declaracion: CONST identificador ID @6 '=' expresion

   45 @7: %empty

   46 asignacion: ID @7 '=' expresion

   47 incremento: ID INCREMENTO

   48 decrementar: ID DECREMENTO

   49 aumentavalor: ID AUMENTO expresion

   50 disminuyevalor: ID DISMINUCION expresion

   51 multiplicavalor: ID MULTI expresion

   52 dividevalor: ID DIVI expresion

   53 modulavalor: ID MOD expresion

   54 identificador: INT
   55              | FLOAT
   56              | DOUBLE
   57              | CHAR
   58              | LONG
   59              | VOID
   60              | BOOL
   61              | SHORT

   62 expresion: expr
   63          | comp

   64 expr: expr '+' term
   65     | expr '-' term
   66     | term

   67 term: term op factor
   68     | factor

   69 op: '*'
   70   | '/'
   71   | BITSIZ
   72   | BITSDE
   73   | '%'

   74 factor: NUM
   75       | '(' expr ')'
   76       | ID
   77       | VERDAD
   78       | FALSO

   79 comp: expr '>' '=' expr
   80     | expr '>' expr
   81     | expr '<' expr
   82     | expr '<' '=' expr
   83     | expr IGUALDAD expr
   84     | expr DESIGUALDAD expr
   85     | expr AND expr
   86     | expr OR expr
   87     | expr NAND expr
   88     | expr XOR expr
   89     | expr NOR expr

   90 else: ELSE bloque

   91 @8: %empty

   92 $@9: %empty

   93 else: ELIF '(' comp ')' @8 bloque $@9 else
   94     | %empty

   95 funcion: DE_TIPO '(' identificador ')'
   96        | NEGACION '(' expr ')'


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 73
    '(' (40) 30 31 32 33 37 40 75 93 95 96
    ')' (41) 30 31 32 33 37 40 75 93 95 96
    '*' (42) 69
    '+' (43) 64
    '-' (45) 65
    '/' (47) 70
    ';' (59) 33
    '<' (60) 81 82
    '=' (61) 44 46 79 82
    '>' (62) 79 80
    '{' (123) 41
    '}' (125) 41
    error (256)
    WHILE (258) 32 37
    IF (259) 40
    ID (260) 42 44 46 47 48 49 50 51 52 53 76
    NUM (261) 74
    DO (262) 32
    FOR (263) 33
    IGUALDAD (264) 83
    ELSE (265) 90
    ELIF (266) 93
    CONTINUE (267) 17
    INT (268) 54
    LONG (269) 58
    SHORT (270) 61
    DOUBLE (271) 56
    FLOAT (272) 55
    CHAR (273) 57
    BOOL (274) 60
    VERDAD (275) 77
    FALSO (276) 78
    VOID (277) 59
    CONST (278) 44
    BITSIZ (279) 71
    BITSDE (280) 72
    RETURN (281) 18
    BREAK (282) 19
    PASS (283) 20
    INCREMENTO (284) 47
    DECREMENTO (285) 48
    AUMENTO (286) 49
    DISMINUCION (287) 50
    MULTI (288) 51
    DIVI (289) 52
    MOD (290) 53
    PRINT (291) 30
    COMENTARIOSIMPLE (292) 28
    COMENTARIOCOMPLEJO (293) 29
    DE_TIPO (294) 95
    DESIGUALDAD (295) 84
    SCAN (296) 31
    NEGACION (297) 96
    AND (298) 85
    OR (299) 86
    NAND (300) 87
    XOR (301) 88
    NOR (302) 89
    COMPMAYOR (303)
    COMPMENOR (304)
    COMPMAYORIGUAL (305)
    COMPMENORIGUAL (306)
    COMPIGUAL (307)
    COMPDESIGUAL (308)
    COMPLOGICO (309)
    SALTARF (310)
    SALTAR (311)
    COMPAND (312)
    COMPOR (313)
    COMPNAND (314)
    ASIGNAR (315)
    INCREMENTAR (316)
    DECREMENTAR (317)
    AUMENTAR (318)
    DISMINUIR (319)
    SUMAR (320)
    RESTAR (321)
    MULTIPLICAR (322)
    DIVIDIR (323)
    MODULAR (324)
    COMPXOR (325)
    COMPNOR (326)
    MOVERBDE (327)
    MOVERBIZ (328)


Nonterminals, with rules where they appear

    $accept (87)
        on left: 0
    prog (88)
        on left: 1
        on right: 0
    listainst (89)
        on left: 2 3
        on right: 1 2 41
    instr (90)
        on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
        on right: 2
    comentario (91)
        on left: 26 27
        on right: 24
    comentarioSimple (92)
        on left: 28
        on right: 26
    comentarioComplejo (93)
        on left: 29
        on right: 27
    imprimir (94)
        on left: 30
        on right: 22
    leer (95)
        on left: 31
        on right: 23
    iterativa_do (96)
        on left: 32
        on right: 15
    iterativa_for (97)
        on left: 33
        on right: 16
    iterativa_while (98)
        on left: 37
        on right: 14
    @1 (99)
        on left: 34
        on right: 37
    @2 (100)
        on left: 35
        on right: 37
    @3 (101)
        on left: 36
        on right: 37
    condicional (102)
        on left: 40
        on right: 21
    @4 (103)
        on left: 38
        on right: 40
    $@5 (104)
        on left: 39
        on right: 40
    bloque (105)
        on left: 41
        on right: 32 33 37 40 90 93
    declaracion (106)
        on left: 42 44
        on right: 4
    @6 (107)
        on left: 43
        on right: 44
    asignacion (108)
        on left: 46
        on right: 5 33
    @7 (109)
        on left: 45
        on right: 46
    incremento (110)
        on left: 47
        on right: 6
    decrementar (111)
        on left: 48
        on right: 7
    aumentavalor (112)
        on left: 49
        on right: 8
    disminuyevalor (113)
        on left: 50
        on right: 9
    multiplicavalor (114)
        on left: 51
        on right: 10
    dividevalor (115)
        on left: 52
        on right: 11
    modulavalor (116)
        on left: 53
        on right: 12
    identificador (117)
        on left: 54 55 56 57 58 59 60 61
        on right: 42 44 95
    expresion (118)
        on left: 62 63
        on right: 44 46 49 50 51 52 53
    expr (119)
        on left: 64 65 66
        on right: 30 31 62 64 65 75 79 80 81 82 83 84 85 86 87 88 89 96
    term (120)
        on left: 67 68
        on right: 64 65 66 67
    op (121)
        on left: 69 70 71 72 73
        on right: 67
    factor (122)
        on left: 74 75 76 77 78
        on right: 67 68
    comp (123)
        on left: 79 80 81 82 83 84 85 86 87 88 89
        on right: 13 32 33 37 40 63 93
    else (124)
        on left: 90 93 94
        on right: 40 93
    @8 (125)
        on left: 91
        on right: 93
    $@9 (126)
        on left: 92
        on right: 93
    funcion (127)
        on left: 95 96
        on right: 25


State 0

    0 $accept: . prog $end

    WHILE               shift, and go to state 1
    IF                  shift, and go to state 2
    ID                  shift, and go to state 3
    NUM                 shift, and go to state 4
    DO                  shift, and go to state 5
    FOR                 shift, and go to state 6
    CONTINUE            shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    SHORT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    FLOAT               shift, and go to state 12
    CHAR                shift, and go to state 13
    BOOL                shift, and go to state 14
    VERDAD              shift, and go to state 15
    FALSO               shift, and go to state 16
    VOID                shift, and go to state 17
    CONST               shift, and go to state 18
    RETURN              shift, and go to state 19
    BREAK               shift, and go to state 20
    PASS                shift, and go to state 21
    PRINT               shift, and go to state 22
    COMENTARIOSIMPLE    shift, and go to state 23
    COMENTARIOCOMPLEJO  shift, and go to state 24
    DE_TIPO             shift, and go to state 25
    SCAN                shift, and go to state 26
    NEGACION            shift, and go to state 27
    '('                 shift, and go to state 28

    $default  reduce using rule 3 (listainst)

    prog                go to state 29
    listainst           go to state 30
    instr               go to state 31
    comentario          go to state 32
    comentarioSimple    go to state 33
    comentarioComplejo  go to state 34
    imprimir            go to state 35
    leer                go to state 36
    iterativa_do        go to state 37
    iterativa_for       go to state 38
    iterativa_while     go to state 39
    condicional         go to state 40
    declaracion         go to state 41
    asignacion          go to state 42
    incremento          go to state 43
    decrementar         go to state 44
    aumentavalor        go to state 45
    disminuyevalor      go to state 46
    multiplicavalor     go to state 47
    dividevalor         go to state 48
    modulavalor         go to state 49
    identificador       go to state 50
    expr                go to state 51
    term                go to state 52
    factor              go to state 53
    comp                go to state 54
    funcion             go to state 55


State 1

   37 iterativa_while: WHILE . '(' @1 comp @2 ')' bloque @3

    '('  shift, and go to state 56


State 2

   40 condicional: IF . '(' comp ')' @4 bloque $@5 else

    '('  shift, and go to state 57


State 3

   46 asignacion: ID . @7 '=' expresion
   47 incremento: ID . INCREMENTO
   48 decrementar: ID . DECREMENTO
   49 aumentavalor: ID . AUMENTO expresion
   50 disminuyevalor: ID . DISMINUCION expresion
   51 multiplicavalor: ID . MULTI expresion
   52 dividevalor: ID . DIVI expresion
   53 modulavalor: ID . MOD expresion
   76 factor: ID .

    INCREMENTO   shift, and go to state 58
    DECREMENTO   shift, and go to state 59
    AUMENTO      shift, and go to state 60
    DISMINUCION  shift, and go to state 61
    MULTI        shift, and go to state 62
    DIVI         shift, and go to state 63
    MOD          shift, and go to state 64

    '='       reduce using rule 45 (@7)
    $default  reduce using rule 76 (factor)

    @7  go to state 65


State 4

   74 factor: NUM .

    $default  reduce using rule 74 (factor)


State 5

   32 iterativa_do: DO . bloque WHILE '(' comp ')'

    '{'  shift, and go to state 66

    bloque  go to state 67


State 6

   33 iterativa_for: FOR . '(' asignacion ';' comp ';' asignacion ')' bloque

    '('  shift, and go to state 68


State 7

   17 instr: CONTINUE .

    $default  reduce using rule 17 (instr)


State 8

   54 identificador: INT .

    $default  reduce using rule 54 (identificador)


State 9

   58 identificador: LONG .

    $default  reduce using rule 58 (identificador)


State 10

   61 identificador: SHORT .

    $default  reduce using rule 61 (identificador)


State 11

   56 identificador: DOUBLE .

    $default  reduce using rule 56 (identificador)


State 12

   55 identificador: FLOAT .

    $default  reduce using rule 55 (identificador)


State 13

   57 identificador: CHAR .

    $default  reduce using rule 57 (identificador)


State 14

   60 identificador: BOOL .

    $default  reduce using rule 60 (identificador)


State 15

   77 factor: VERDAD .

    $default  reduce using rule 77 (factor)


State 16

   78 factor: FALSO .

    $default  reduce using rule 78 (factor)


State 17

   59 identificador: VOID .

    $default  reduce using rule 59 (identificador)


State 18

   44 declaracion: CONST . identificador ID @6 '=' expresion

    INT     shift, and go to state 8
    LONG    shift, and go to state 9
    SHORT   shift, and go to state 10
    DOUBLE  shift, and go to state 11
    FLOAT   shift, and go to state 12
    CHAR    shift, and go to state 13
    BOOL    shift, and go to state 14
    VOID    shift, and go to state 17

    identificador  go to state 69


State 19

   18 instr: RETURN .

    $default  reduce using rule 18 (instr)


State 20

   19 instr: BREAK .

    $default  reduce using rule 19 (instr)


State 21

   20 instr: PASS .

    $default  reduce using rule 20 (instr)


State 22

   30 imprimir: PRINT . '(' expr ')'

    '('  shift, and go to state 70


State 23

   28 comentarioSimple: COMENTARIOSIMPLE .

    $default  reduce using rule 28 (comentarioSimple)


State 24

   29 comentarioComplejo: COMENTARIOCOMPLEJO .

    $default  reduce using rule 29 (comentarioComplejo)


State 25

   95 funcion: DE_TIPO . '(' identificador ')'

    '('  shift, and go to state 71


State 26

   31 leer: SCAN . '(' expr ')'

    '('  shift, and go to state 72


State 27

   96 funcion: NEGACION . '(' expr ')'

    '('  shift, and go to state 73


State 28

   75 factor: '(' . expr ')'

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 75
    term    go to state 52
    factor  go to state 53


State 29

    0 $accept: prog . $end

    $end  shift, and go to state 76


State 30

    1 prog: listainst .

    $default  reduce using rule 1 (prog)


State 31

    2 listainst: instr . listainst

    WHILE               shift, and go to state 1
    IF                  shift, and go to state 2
    ID                  shift, and go to state 3
    NUM                 shift, and go to state 4
    DO                  shift, and go to state 5
    FOR                 shift, and go to state 6
    CONTINUE            shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    SHORT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    FLOAT               shift, and go to state 12
    CHAR                shift, and go to state 13
    BOOL                shift, and go to state 14
    VERDAD              shift, and go to state 15
    FALSO               shift, and go to state 16
    VOID                shift, and go to state 17
    CONST               shift, and go to state 18
    RETURN              shift, and go to state 19
    BREAK               shift, and go to state 20
    PASS                shift, and go to state 21
    PRINT               shift, and go to state 22
    COMENTARIOSIMPLE    shift, and go to state 23
    COMENTARIOCOMPLEJO  shift, and go to state 24
    DE_TIPO             shift, and go to state 25
    SCAN                shift, and go to state 26
    NEGACION            shift, and go to state 27
    '('                 shift, and go to state 28

    $default  reduce using rule 3 (listainst)

    listainst           go to state 77
    instr               go to state 31
    comentario          go to state 32
    comentarioSimple    go to state 33
    comentarioComplejo  go to state 34
    imprimir            go to state 35
    leer                go to state 36
    iterativa_do        go to state 37
    iterativa_for       go to state 38
    iterativa_while     go to state 39
    condicional         go to state 40
    declaracion         go to state 41
    asignacion          go to state 42
    incremento          go to state 43
    decrementar         go to state 44
    aumentavalor        go to state 45
    disminuyevalor      go to state 46
    multiplicavalor     go to state 47
    dividevalor         go to state 48
    modulavalor         go to state 49
    identificador       go to state 50
    expr                go to state 51
    term                go to state 52
    factor              go to state 53
    comp                go to state 54
    funcion             go to state 55


State 32

   24 instr: comentario .

    $default  reduce using rule 24 (instr)


State 33

   26 comentario: comentarioSimple .

    $default  reduce using rule 26 (comentario)


State 34

   27 comentario: comentarioComplejo .

    $default  reduce using rule 27 (comentario)


State 35

   22 instr: imprimir .

    $default  reduce using rule 22 (instr)


State 36

   23 instr: leer .

    $default  reduce using rule 23 (instr)


State 37

   15 instr: iterativa_do .

    $default  reduce using rule 15 (instr)


State 38

   16 instr: iterativa_for .

    $default  reduce using rule 16 (instr)


State 39

   14 instr: iterativa_while .

    $default  reduce using rule 14 (instr)


State 40

   21 instr: condicional .

    $default  reduce using rule 21 (instr)


State 41

    4 instr: declaracion .

    $default  reduce using rule 4 (instr)


State 42

    5 instr: asignacion .

    $default  reduce using rule 5 (instr)


State 43

    6 instr: incremento .

    $default  reduce using rule 6 (instr)


State 44

    7 instr: decrementar .

    $default  reduce using rule 7 (instr)


State 45

    8 instr: aumentavalor .

    $default  reduce using rule 8 (instr)


State 46

    9 instr: disminuyevalor .

    $default  reduce using rule 9 (instr)


State 47

   10 instr: multiplicavalor .

    $default  reduce using rule 10 (instr)


State 48

   11 instr: dividevalor .

    $default  reduce using rule 11 (instr)


State 49

   12 instr: modulavalor .

    $default  reduce using rule 12 (instr)


State 50

   42 declaracion: identificador . ID

    ID  shift, and go to state 78


State 51

   64 expr: expr . '+' term
   65     | expr . '-' term
   79 comp: expr . '>' '=' expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . '<' '=' expr
   83     | expr . IGUALDAD expr
   84     | expr . DESIGUALDAD expr
   85     | expr . AND expr
   86     | expr . OR expr
   87     | expr . NAND expr
   88     | expr . XOR expr
   89     | expr . NOR expr

    IGUALDAD     shift, and go to state 79
    DESIGUALDAD  shift, and go to state 80
    AND          shift, and go to state 81
    OR           shift, and go to state 82
    NAND         shift, and go to state 83
    XOR          shift, and go to state 84
    NOR          shift, and go to state 85
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '>'          shift, and go to state 88
    '<'          shift, and go to state 89


State 52

   66 expr: term .
   67 term: term . op factor

    BITSIZ  shift, and go to state 90
    BITSDE  shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94

    $default  reduce using rule 66 (expr)

    op  go to state 95


State 53

   68 term: factor .

    $default  reduce using rule 68 (term)


State 54

   13 instr: comp .

    $default  reduce using rule 13 (instr)


State 55

   25 instr: funcion .

    $default  reduce using rule 25 (instr)


State 56

   37 iterativa_while: WHILE '(' . @1 comp @2 ')' bloque @3

    $default  reduce using rule 34 (@1)

    @1  go to state 96


State 57

   40 condicional: IF '(' . comp ')' @4 bloque $@5 else

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 51
    term    go to state 52
    factor  go to state 53
    comp    go to state 97


State 58

   47 incremento: ID INCREMENTO .

    $default  reduce using rule 47 (incremento)


State 59

   48 decrementar: ID DECREMENTO .

    $default  reduce using rule 48 (decrementar)


State 60

   49 aumentavalor: ID AUMENTO . expresion

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 98
    expr       go to state 99
    term       go to state 52
    factor     go to state 53
    comp       go to state 100


State 61

   50 disminuyevalor: ID DISMINUCION . expresion

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 101
    expr       go to state 99
    term       go to state 52
    factor     go to state 53
    comp       go to state 100


State 62

   51 multiplicavalor: ID MULTI . expresion

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 102
    expr       go to state 99
    term       go to state 52
    factor     go to state 53
    comp       go to state 100


State 63

   52 dividevalor: ID DIVI . expresion

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 103
    expr       go to state 99
    term       go to state 52
    factor     go to state 53
    comp       go to state 100


State 64

   53 modulavalor: ID MOD . expresion

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 104
    expr       go to state 99
    term       go to state 52
    factor     go to state 53
    comp       go to state 100


State 65

   46 asignacion: ID @7 . '=' expresion

    '='  shift, and go to state 105


State 66

   41 bloque: '{' . listainst '}'

    WHILE               shift, and go to state 1
    IF                  shift, and go to state 2
    ID                  shift, and go to state 3
    NUM                 shift, and go to state 4
    DO                  shift, and go to state 5
    FOR                 shift, and go to state 6
    CONTINUE            shift, and go to state 7
    INT                 shift, and go to state 8
    LONG                shift, and go to state 9
    SHORT               shift, and go to state 10
    DOUBLE              shift, and go to state 11
    FLOAT               shift, and go to state 12
    CHAR                shift, and go to state 13
    BOOL                shift, and go to state 14
    VERDAD              shift, and go to state 15
    FALSO               shift, and go to state 16
    VOID                shift, and go to state 17
    CONST               shift, and go to state 18
    RETURN              shift, and go to state 19
    BREAK               shift, and go to state 20
    PASS                shift, and go to state 21
    PRINT               shift, and go to state 22
    COMENTARIOSIMPLE    shift, and go to state 23
    COMENTARIOCOMPLEJO  shift, and go to state 24
    DE_TIPO             shift, and go to state 25
    SCAN                shift, and go to state 26
    NEGACION            shift, and go to state 27
    '('                 shift, and go to state 28

    $default  reduce using rule 3 (listainst)

    listainst           go to state 106
    instr               go to state 31
    comentario          go to state 32
    comentarioSimple    go to state 33
    comentarioComplejo  go to state 34
    imprimir            go to state 35
    leer                go to state 36
    iterativa_do        go to state 37
    iterativa_for       go to state 38
    iterativa_while     go to state 39
    condicional         go to state 40
    declaracion         go to state 41
    asignacion          go to state 42
    incremento          go to state 43
    decrementar         go to state 44
    aumentavalor        go to state 45
    disminuyevalor      go to state 46
    multiplicavalor     go to state 47
    dividevalor         go to state 48
    modulavalor         go to state 49
    identificador       go to state 50
    expr                go to state 51
    term                go to state 52
    factor              go to state 53
    comp                go to state 54
    funcion             go to state 55


State 67

   32 iterativa_do: DO bloque . WHILE '(' comp ')'

    WHILE  shift, and go to state 107


State 68

   33 iterativa_for: FOR '(' . asignacion ';' comp ';' asignacion ')' bloque

    ID  shift, and go to state 108

    asignacion  go to state 109


State 69

   44 declaracion: CONST identificador . ID @6 '=' expresion

    ID  shift, and go to state 110


State 70

   30 imprimir: PRINT '(' . expr ')'

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 111
    term    go to state 52
    factor  go to state 53


State 71

   95 funcion: DE_TIPO '(' . identificador ')'

    INT     shift, and go to state 8
    LONG    shift, and go to state 9
    SHORT   shift, and go to state 10
    DOUBLE  shift, and go to state 11
    FLOAT   shift, and go to state 12
    CHAR    shift, and go to state 13
    BOOL    shift, and go to state 14
    VOID    shift, and go to state 17

    identificador  go to state 112


State 72

   31 leer: SCAN '(' . expr ')'

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 113
    term    go to state 52
    factor  go to state 53


State 73

   96 funcion: NEGACION '(' . expr ')'

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 114
    term    go to state 52
    factor  go to state 53


State 74

   76 factor: ID .

    $default  reduce using rule 76 (factor)


State 75

   64 expr: expr . '+' term
   65     | expr . '-' term
   75 factor: '(' expr . ')'

    ')'  shift, and go to state 115
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87


State 76

    0 $accept: prog $end .

    $default  accept


State 77

    2 listainst: instr listainst .

    $default  reduce using rule 2 (listainst)


State 78

   42 declaracion: identificador ID .

    $default  reduce using rule 42 (declaracion)


State 79

   83 comp: expr IGUALDAD . expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 116
    term    go to state 52
    factor  go to state 53


State 80

   84 comp: expr DESIGUALDAD . expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 117
    term    go to state 52
    factor  go to state 53


State 81

   85 comp: expr AND . expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 118
    term    go to state 52
    factor  go to state 53


State 82

   86 comp: expr OR . expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 119
    term    go to state 52
    factor  go to state 53


State 83

   87 comp: expr NAND . expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 120
    term    go to state 52
    factor  go to state 53


State 84

   88 comp: expr XOR . expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 121
    term    go to state 52
    factor  go to state 53


State 85

   89 comp: expr NOR . expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 122
    term    go to state 52
    factor  go to state 53


State 86

   64 expr: expr '+' . term

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    term    go to state 123
    factor  go to state 53


State 87

   65 expr: expr '-' . term

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    term    go to state 124
    factor  go to state 53


State 88

   79 comp: expr '>' . '=' expr
   80     | expr '>' . expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28
    '='     shift, and go to state 125

    expr    go to state 126
    term    go to state 52
    factor  go to state 53


State 89

   81 comp: expr '<' . expr
   82     | expr '<' . '=' expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28
    '='     shift, and go to state 127

    expr    go to state 128
    term    go to state 52
    factor  go to state 53


State 90

   71 op: BITSIZ .

    $default  reduce using rule 71 (op)


State 91

   72 op: BITSDE .

    $default  reduce using rule 72 (op)


State 92

   69 op: '*' .

    $default  reduce using rule 69 (op)


State 93

   70 op: '/' .

    $default  reduce using rule 70 (op)


State 94

   73 op: '%' .

    $default  reduce using rule 73 (op)


State 95

   67 term: term op . factor

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    factor  go to state 129


State 96

   37 iterativa_while: WHILE '(' @1 . comp @2 ')' bloque @3

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 51
    term    go to state 52
    factor  go to state 53
    comp    go to state 130


State 97

   40 condicional: IF '(' comp . ')' @4 bloque $@5 else

    ')'  shift, and go to state 131


State 98

   49 aumentavalor: ID AUMENTO expresion .

    $default  reduce using rule 49 (aumentavalor)


State 99

   62 expresion: expr .
   64 expr: expr . '+' term
   65     | expr . '-' term
   79 comp: expr . '>' '=' expr
   80     | expr . '>' expr
   81     | expr . '<' expr
   82     | expr . '<' '=' expr
   83     | expr . IGUALDAD expr
   84     | expr . DESIGUALDAD expr
   85     | expr . AND expr
   86     | expr . OR expr
   87     | expr . NAND expr
   88     | expr . XOR expr
   89     | expr . NOR expr

    IGUALDAD     shift, and go to state 79
    DESIGUALDAD  shift, and go to state 80
    AND          shift, and go to state 81
    OR           shift, and go to state 82
    NAND         shift, and go to state 83
    XOR          shift, and go to state 84
    NOR          shift, and go to state 85
    '+'          shift, and go to state 86
    '-'          shift, and go to state 87
    '>'          shift, and go to state 88
    '<'          shift, and go to state 89

    $default  reduce using rule 62 (expresion)


State 100

   63 expresion: comp .

    $default  reduce using rule 63 (expresion)


State 101

   50 disminuyevalor: ID DISMINUCION expresion .

    $default  reduce using rule 50 (disminuyevalor)


State 102

   51 multiplicavalor: ID MULTI expresion .

    $default  reduce using rule 51 (multiplicavalor)


State 103

   52 dividevalor: ID DIVI expresion .

    $default  reduce using rule 52 (dividevalor)


State 104

   53 modulavalor: ID MOD expresion .

    $default  reduce using rule 53 (modulavalor)


State 105

   46 asignacion: ID @7 '=' . expresion

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 132
    expr       go to state 99
    term       go to state 52
    factor     go to state 53
    comp       go to state 100


State 106

   41 bloque: '{' listainst . '}'

    '}'  shift, and go to state 133


State 107

   32 iterativa_do: DO bloque WHILE . '(' comp ')'

    '('  shift, and go to state 134


State 108

   46 asignacion: ID . @7 '=' expresion

    $default  reduce using rule 45 (@7)

    @7  go to state 65


State 109

   33 iterativa_for: FOR '(' asignacion . ';' comp ';' asignacion ')' bloque

    ';'  shift, and go to state 135


State 110

   44 declaracion: CONST identificador ID . @6 '=' expresion

    $default  reduce using rule 43 (@6)

    @6  go to state 136


State 111

   30 imprimir: PRINT '(' expr . ')'
   64 expr: expr . '+' term
   65     | expr . '-' term

    ')'  shift, and go to state 137
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87


State 112

   95 funcion: DE_TIPO '(' identificador . ')'

    ')'  shift, and go to state 138


State 113

   31 leer: SCAN '(' expr . ')'
   64 expr: expr . '+' term
   65     | expr . '-' term

    ')'  shift, and go to state 139
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87


State 114

   64 expr: expr . '+' term
   65     | expr . '-' term
   96 funcion: NEGACION '(' expr . ')'

    ')'  shift, and go to state 140
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87


State 115

   75 factor: '(' expr ')' .

    $default  reduce using rule 75 (factor)


State 116

   64 expr: expr . '+' term
   65     | expr . '-' term
   83 comp: expr IGUALDAD expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 83 (comp)


State 117

   64 expr: expr . '+' term
   65     | expr . '-' term
   84 comp: expr DESIGUALDAD expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 84 (comp)


State 118

   64 expr: expr . '+' term
   65     | expr . '-' term
   85 comp: expr AND expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 85 (comp)


State 119

   64 expr: expr . '+' term
   65     | expr . '-' term
   86 comp: expr OR expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 86 (comp)


State 120

   64 expr: expr . '+' term
   65     | expr . '-' term
   87 comp: expr NAND expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 87 (comp)


State 121

   64 expr: expr . '+' term
   65     | expr . '-' term
   88 comp: expr XOR expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 88 (comp)


State 122

   64 expr: expr . '+' term
   65     | expr . '-' term
   89 comp: expr NOR expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 89 (comp)


State 123

   64 expr: expr '+' term .
   67 term: term . op factor

    BITSIZ  shift, and go to state 90
    BITSDE  shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94

    $default  reduce using rule 64 (expr)

    op  go to state 95


State 124

   65 expr: expr '-' term .
   67 term: term . op factor

    BITSIZ  shift, and go to state 90
    BITSDE  shift, and go to state 91
    '*'     shift, and go to state 92
    '/'     shift, and go to state 93
    '%'     shift, and go to state 94

    $default  reduce using rule 65 (expr)

    op  go to state 95


State 125

   79 comp: expr '>' '=' . expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 141
    term    go to state 52
    factor  go to state 53


State 126

   64 expr: expr . '+' term
   65     | expr . '-' term
   80 comp: expr '>' expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 80 (comp)


State 127

   82 comp: expr '<' '=' . expr

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 142
    term    go to state 52
    factor  go to state 53


State 128

   64 expr: expr . '+' term
   65     | expr . '-' term
   81 comp: expr '<' expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 81 (comp)


State 129

   67 term: term op factor .

    $default  reduce using rule 67 (term)


State 130

   37 iterativa_while: WHILE '(' @1 comp . @2 ')' bloque @3

    $default  reduce using rule 35 (@2)

    @2  go to state 143


State 131

   40 condicional: IF '(' comp ')' . @4 bloque $@5 else

    $default  reduce using rule 38 (@4)

    @4  go to state 144


State 132

   46 asignacion: ID @7 '=' expresion .

    $default  reduce using rule 46 (asignacion)


State 133

   41 bloque: '{' listainst '}' .

    $default  reduce using rule 41 (bloque)


State 134

   32 iterativa_do: DO bloque WHILE '(' . comp ')'

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 51
    term    go to state 52
    factor  go to state 53
    comp    go to state 145


State 135

   33 iterativa_for: FOR '(' asignacion ';' . comp ';' asignacion ')' bloque

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 51
    term    go to state 52
    factor  go to state 53
    comp    go to state 146


State 136

   44 declaracion: CONST identificador ID @6 . '=' expresion

    '='  shift, and go to state 147


State 137

   30 imprimir: PRINT '(' expr ')' .

    $default  reduce using rule 30 (imprimir)


State 138

   95 funcion: DE_TIPO '(' identificador ')' .

    $default  reduce using rule 95 (funcion)


State 139

   31 leer: SCAN '(' expr ')' .

    $default  reduce using rule 31 (leer)


State 140

   96 funcion: NEGACION '(' expr ')' .

    $default  reduce using rule 96 (funcion)


State 141

   64 expr: expr . '+' term
   65     | expr . '-' term
   79 comp: expr '>' '=' expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 79 (comp)


State 142

   64 expr: expr . '+' term
   65     | expr . '-' term
   82 comp: expr '<' '=' expr .

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87

    $default  reduce using rule 82 (comp)


State 143

   37 iterativa_while: WHILE '(' @1 comp @2 . ')' bloque @3

    ')'  shift, and go to state 148


State 144

   40 condicional: IF '(' comp ')' @4 . bloque $@5 else

    '{'  shift, and go to state 66

    bloque  go to state 149


State 145

   32 iterativa_do: DO bloque WHILE '(' comp . ')'

    ')'  shift, and go to state 150


State 146

   33 iterativa_for: FOR '(' asignacion ';' comp . ';' asignacion ')' bloque

    ';'  shift, and go to state 151


State 147

   44 declaracion: CONST identificador ID @6 '=' . expresion

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expresion  go to state 152
    expr       go to state 99
    term       go to state 52
    factor     go to state 53
    comp       go to state 100


State 148

   37 iterativa_while: WHILE '(' @1 comp @2 ')' . bloque @3

    '{'  shift, and go to state 66

    bloque  go to state 153


State 149

   40 condicional: IF '(' comp ')' @4 bloque . $@5 else

    $default  reduce using rule 39 ($@5)

    $@5  go to state 154


State 150

   32 iterativa_do: DO bloque WHILE '(' comp ')' .

    $default  reduce using rule 32 (iterativa_do)


State 151

   33 iterativa_for: FOR '(' asignacion ';' comp ';' . asignacion ')' bloque

    ID  shift, and go to state 108

    asignacion  go to state 155


State 152

   44 declaracion: CONST identificador ID @6 '=' expresion .

    $default  reduce using rule 44 (declaracion)


State 153

   37 iterativa_while: WHILE '(' @1 comp @2 ')' bloque . @3

    $default  reduce using rule 36 (@3)

    @3  go to state 156


State 154

   40 condicional: IF '(' comp ')' @4 bloque $@5 . else

    ELSE  shift, and go to state 157
    ELIF  shift, and go to state 158

    $default  reduce using rule 94 (else)

    else  go to state 159


State 155

   33 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion . ')' bloque

    ')'  shift, and go to state 160


State 156

   37 iterativa_while: WHILE '(' @1 comp @2 ')' bloque @3 .

    $default  reduce using rule 37 (iterativa_while)


State 157

   90 else: ELSE . bloque

    '{'  shift, and go to state 66

    bloque  go to state 161


State 158

   93 else: ELIF . '(' comp ')' @8 bloque $@9 else

    '('  shift, and go to state 162


State 159

   40 condicional: IF '(' comp ')' @4 bloque $@5 else .

    $default  reduce using rule 40 (condicional)


State 160

   33 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' . bloque

    '{'  shift, and go to state 66

    bloque  go to state 163


State 161

   90 else: ELSE bloque .

    $default  reduce using rule 90 (else)


State 162

   93 else: ELIF '(' . comp ')' @8 bloque $@9 else

    ID      shift, and go to state 74
    NUM     shift, and go to state 4
    VERDAD  shift, and go to state 15
    FALSO   shift, and go to state 16
    '('     shift, and go to state 28

    expr    go to state 51
    term    go to state 52
    factor  go to state 53
    comp    go to state 164


State 163

   33 iterativa_for: FOR '(' asignacion ';' comp ';' asignacion ')' bloque .

    $default  reduce using rule 33 (iterativa_for)


State 164

   93 else: ELIF '(' comp . ')' @8 bloque $@9 else

    ')'  shift, and go to state 165


State 165

   93 else: ELIF '(' comp ')' . @8 bloque $@9 else

    $default  reduce using rule 91 (@8)

    @8  go to state 166


State 166

   93 else: ELIF '(' comp ')' @8 . bloque $@9 else

    '{'  shift, and go to state 66

    bloque  go to state 167


State 167

   93 else: ELIF '(' comp ')' @8 bloque . $@9 else

    $default  reduce using rule 92 ($@9)

    $@9  go to state 168


State 168

   93 else: ELIF '(' comp ')' @8 bloque $@9 . else

    ELSE  shift, and go to state 157
    ELIF  shift, and go to state 158

    $default  reduce using rule 94 (else)

    else  go to state 169


State 169

   93 else: ELIF '(' comp ')' @8 bloque $@9 else .

    $default  reduce using rule 93 (else)

Terminals unused in grammar

    LONG
    SHORT
    DOUBLE
    FLOAT
    CHAR
    BOOL
    VERDAD
    FALSO
    VOID


Grammar

    0 $accept: prog $end

    1 prog: listainst

    2 listainst: instr listainst
    3          | %empty

    4 instr: declaracion
    5      | asignacion
    6      | comp
    7      | iterativa_while
    8      | condicional

    9 iterativa_while: MIENTRAS '(' comp ')' bloque

   10 condicional: IF '(' comp ')' bloque

   11 bloque: '{' listainst '}'

   12 declaracion: identificador ID

   13 @1: %empty

   14 asignacion: ID @1 '=' expresion

   15 identificador: INT

   16 expresion: expr
   17          | comp
   18          | sumaunaria

   19 expr: expr '+' term
   20     | expr '-' term
   21     | term

   22 term: term opmult factor
   23     | factor

   24 opmult: '*'

   25 factor: NUM
   26       | '(' expr ')'
   27       | ID

   28 comp: expr '>' '=' expr
   29     | expr '>' expr
   30     | expr '<' expr
   31     | expr IGUALDAD expr

   32 sumaunaria: ID SUMAUN


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 9 10 26
    ')' (41) 9 10 26
    '*' (42) 24
    '+' (43) 19
    '-' (45) 20
    '<' (60) 30
    '=' (61) 14 28
    '>' (62) 28 29
    '{' (123) 11
    '}' (125) 11
    error (256)
    MIENTRAS (258) 9
    IF (259) 10
    ID (260) 12 14 27 32
    NUM (261) 25
    SUMAUN (262) 32
    IGUALDAD (263) 31
    INT (264) 15
    LONG (265)
    SHORT (266)
    DOUBLE (267)
    FLOAT (268)
    CHAR (269)
    BOOL (270)
    VERDAD (271)
    FALSO (272)
    VOID (273)


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    prog (30)
        on left: 1
        on right: 0
    listainst (31)
        on left: 2 3
        on right: 1 2 11
    instr (32)
        on left: 4 5 6 7 8
        on right: 2
    iterativa_while (33)
        on left: 9
        on right: 7
    condicional (34)
        on left: 10
        on right: 8
    bloque (35)
        on left: 11
        on right: 9 10
    declaracion (36)
        on left: 12
        on right: 4
    asignacion (37)
        on left: 14
        on right: 5
    @1 (38)
        on left: 13
        on right: 14
    identificador (39)
        on left: 15
        on right: 12
    expresion (40)
        on left: 16 17 18
        on right: 14
    expr (41)
        on left: 19 20 21
        on right: 16 19 20 26 28 29 30 31
    term (42)
        on left: 22 23
        on right: 19 20 21 22
    opmult (43)
        on left: 24
        on right: 22
    factor (44)
        on left: 25 26 27
        on right: 22 23
    comp (45)
        on left: 28 29 30 31
        on right: 6 9 10 17
    sumaunaria (46)
        on left: 32
        on right: 18


State 0

    0 $accept: . prog $end

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    '('       shift, and go to state 6

    $default  reduce using rule 3 (listainst)

    prog             go to state 7
    listainst        go to state 8
    instr            go to state 9
    iterativa_while  go to state 10
    condicional      go to state 11
    declaracion      go to state 12
    asignacion       go to state 13
    identificador    go to state 14
    expr             go to state 15
    term             go to state 16
    factor           go to state 17
    comp             go to state 18


State 1

    9 iterativa_while: MIENTRAS . '(' comp ')' bloque

    '('  shift, and go to state 19


State 2

   10 condicional: IF . '(' comp ')' bloque

    '('  shift, and go to state 20


State 3

   14 asignacion: ID . @1 '=' expresion
   27 factor: ID .

    '='       reduce using rule 13 (@1)
    $default  reduce using rule 27 (factor)

    @1  go to state 21


State 4

   25 factor: NUM .

    $default  reduce using rule 25 (factor)


State 5

   15 identificador: INT .

    $default  reduce using rule 15 (identificador)


State 6

   26 factor: '(' . expr ')'

    ID   shift, and go to state 22
    NUM  shift, and go to state 4
    '('  shift, and go to state 6

    expr    go to state 23
    term    go to state 16
    factor  go to state 17


State 7

    0 $accept: prog . $end

    $end  shift, and go to state 24


State 8

    1 prog: listainst .

    $default  reduce using rule 1 (prog)


State 9

    2 listainst: instr . listainst

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    '('       shift, and go to state 6

    $default  reduce using rule 3 (listainst)

    listainst        go to state 25
    instr            go to state 9
    iterativa_while  go to state 10
    condicional      go to state 11
    declaracion      go to state 12
    asignacion       go to state 13
    identificador    go to state 14
    expr             go to state 15
    term             go to state 16
    factor           go to state 17
    comp             go to state 18


State 10

    7 instr: iterativa_while .

    $default  reduce using rule 7 (instr)


State 11

    8 instr: condicional .

    $default  reduce using rule 8 (instr)


State 12

    4 instr: declaracion .

    $default  reduce using rule 4 (instr)


State 13

    5 instr: asignacion .

    $default  reduce using rule 5 (instr)


State 14

   12 declaracion: identificador . ID

    ID  shift, and go to state 26


State 15

   19 expr: expr . '+' term
   20     | expr . '-' term
   28 comp: expr . '>' '=' expr
   29     | expr . '>' expr
   30     | expr . '<' expr
   31     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 27
    '+'       shift, and go to state 28
    '-'       shift, and go to state 29
    '>'       shift, and go to state 30
    '<'       shift, and go to state 31


State 16

   21 expr: term .
   22 term: term . opmult factor

    '*'  shift, and go to state 32

    $default  reduce using rule 21 (expr)

    opmult  go to state 33


State 17

   23 term: factor .

    $default  reduce using rule 23 (term)


State 18

    6 instr: comp .

    $default  reduce using rule 6 (instr)


State 19

    9 iterativa_while: MIENTRAS '(' . comp ')' bloque

    ID   shift, and go to state 22
    NUM  shift, and go to state 4
    '('  shift, and go to state 6

    expr    go to state 15
    term    go to state 16
    factor  go to state 17
    comp    go to state 34


State 20

   10 condicional: IF '(' . comp ')' bloque

    ID   shift, and go to state 22
    NUM  shift, and go to state 4
    '('  shift, and go to state 6

    expr    go to state 15
    term    go to state 16
    factor  go to state 17
    comp    go to state 35


State 21

   14 asignacion: ID @1 . '=' expresion

    '='  shift, and go to state 36


State 22

   27 factor: ID .

    $default  reduce using rule 27 (factor)


State 23

   19 expr: expr . '+' term
   20     | expr . '-' term
   26 factor: '(' expr . ')'

    ')'  shift, and go to state 37
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29


State 24

    0 $accept: prog $end .

    $default  accept


State 25

    2 listainst: instr listainst .

    $default  reduce using rule 2 (listainst)


State 26

   12 declaracion: identificador ID .

    $default  reduce using rule 12 (declaracion)


State 27

   31 comp: expr IGUALDAD . expr

    ID   shift, and go to state 22
    NUM  shift, and go to state 4
    '('  shift, and go to state 6

    expr    go to state 38
    term    go to state 16
    factor  go to state 17


State 28

   19 expr: expr '+' . term

    ID   shift, and go to state 22
    NUM  shift, and go to state 4
    '('  shift, and go to state 6

    term    go to state 39
    factor  go to state 17


State 29

   20 expr: expr '-' . term

    ID   shift, and go to state 22
    NUM  shift, and go to state 4
    '('  shift, and go to state 6

    term    go to state 40
    factor  go to state 17


State 30

   28 comp: expr '>' . '=' expr
   29     | expr '>' . expr

    ID   shift, and go to state 22
    NUM  shift, and go to state 4
    '('  shift, and go to state 6
    '='  shift, and go to state 41

    expr    go to state 42
    term    go to state 16
    factor  go to state 17


State 31

   30 comp: expr '<' . expr

    ID   shift, and go to state 22
    NUM  shift, and go to state 4
    '('  shift, and go to state 6

    expr    go to state 43
    term    go to state 16
    factor  go to state 17


State 32

   24 opmult: '*' .

    $default  reduce using rule 24 (opmult)


State 33

   22 term: term opmult . factor

    ID   shift, and go to state 22
    NUM  shift, and go to state 4
    '('  shift, and go to state 6

    factor  go to state 44


State 34

    9 iterativa_while: MIENTRAS '(' comp . ')' bloque

    ')'  shift, and go to state 45


State 35

   10 condicional: IF '(' comp . ')' bloque

    ')'  shift, and go to state 46


State 36

   14 asignacion: ID @1 '=' . expresion

    ID   shift, and go to state 47
    NUM  shift, and go to state 4
    '('  shift, and go to state 6

    expresion   go to state 48
    expr        go to state 49
    term        go to state 16
    factor      go to state 17
    comp        go to state 50
    sumaunaria  go to state 51


State 37

   26 factor: '(' expr ')' .

    $default  reduce using rule 26 (factor)


State 38

   19 expr: expr . '+' term
   20     | expr . '-' term
   31 comp: expr IGUALDAD expr .

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29

    $default  reduce using rule 31 (comp)


State 39

   19 expr: expr '+' term .
   22 term: term . opmult factor

    '*'  shift, and go to state 32

    $default  reduce using rule 19 (expr)

    opmult  go to state 33


State 40

   20 expr: expr '-' term .
   22 term: term . opmult factor

    '*'  shift, and go to state 32

    $default  reduce using rule 20 (expr)

    opmult  go to state 33


State 41

   28 comp: expr '>' '=' . expr

    ID   shift, and go to state 22
    NUM  shift, and go to state 4
    '('  shift, and go to state 6

    expr    go to state 52
    term    go to state 16
    factor  go to state 17


State 42

   19 expr: expr . '+' term
   20     | expr . '-' term
   29 comp: expr '>' expr .

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29

    $default  reduce using rule 29 (comp)


State 43

   19 expr: expr . '+' term
   20     | expr . '-' term
   30 comp: expr '<' expr .

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29

    $default  reduce using rule 30 (comp)


State 44

   22 term: term opmult factor .

    $default  reduce using rule 22 (term)


State 45

    9 iterativa_while: MIENTRAS '(' comp ')' . bloque

    '{'  shift, and go to state 53

    bloque  go to state 54


State 46

   10 condicional: IF '(' comp ')' . bloque

    '{'  shift, and go to state 53

    bloque  go to state 55


State 47

   27 factor: ID .
   32 sumaunaria: ID . SUMAUN

    SUMAUN  shift, and go to state 56

    $default  reduce using rule 27 (factor)


State 48

   14 asignacion: ID @1 '=' expresion .

    $default  reduce using rule 14 (asignacion)


State 49

   16 expresion: expr .
   19 expr: expr . '+' term
   20     | expr . '-' term
   28 comp: expr . '>' '=' expr
   29     | expr . '>' expr
   30     | expr . '<' expr
   31     | expr . IGUALDAD expr

    IGUALDAD  shift, and go to state 27
    '+'       shift, and go to state 28
    '-'       shift, and go to state 29
    '>'       shift, and go to state 30
    '<'       shift, and go to state 31

    $default  reduce using rule 16 (expresion)


State 50

   17 expresion: comp .

    $default  reduce using rule 17 (expresion)


State 51

   18 expresion: sumaunaria .

    $default  reduce using rule 18 (expresion)


State 52

   19 expr: expr . '+' term
   20     | expr . '-' term
   28 comp: expr '>' '=' expr .

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29

    $default  reduce using rule 28 (comp)


State 53

   11 bloque: '{' . listainst '}'

    MIENTRAS  shift, and go to state 1
    IF        shift, and go to state 2
    ID        shift, and go to state 3
    NUM       shift, and go to state 4
    INT       shift, and go to state 5
    '('       shift, and go to state 6

    $default  reduce using rule 3 (listainst)

    listainst        go to state 57
    instr            go to state 9
    iterativa_while  go to state 10
    condicional      go to state 11
    declaracion      go to state 12
    asignacion       go to state 13
    identificador    go to state 14
    expr             go to state 15
    term             go to state 16
    factor           go to state 17
    comp             go to state 18


State 54

    9 iterativa_while: MIENTRAS '(' comp ')' bloque .

    $default  reduce using rule 9 (iterativa_while)


State 55

   10 condicional: IF '(' comp ')' bloque .

    $default  reduce using rule 10 (condicional)


State 56

   32 sumaunaria: ID SUMAUN .

    $default  reduce using rule 32 (sumaunaria)


State 57

   11 bloque: '{' listainst . '}'

    '}'  shift, and go to state 58


State 58

   11 bloque: '{' listainst '}' .

    $default  reduce using rule 11 (bloque)
